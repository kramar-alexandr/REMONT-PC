external function boolean MySendWebRequest(string,integer,longint,boolean,string,string,string,string,boolean,area,var area,integer);
external function boolean MySendRawWebRequest(string,integer,longint,boolean,string,string,string,string,boolean,area,var area,integer);

SetLangMode(LangRussian,"RUS",0);

global function string 255 NormalizeStrToJson (string Str)
begin
	integer strln,i;
	string 255 NormStr;
	

	NormStr = "";
	strln = len(Str);
	for (i=0;i<strln;i=i+1)begin
		if(mid(Str,i,1)==chr(34))then begin
			NormStr = NormStr & chr(92) & mid(Str,i,1);
		end else begin
			NormStr = NormStr & mid(Str,i,1);
		end;
	end;
	
	
	NormalizeStrToJson = NormStr;
	
	return;
end;

function string 255 NormalizeStrToJsonMy(string input)
begin
	integer i;
	string 5 c;
	string 255 res;
	
	for(i=0;i<len(input);i=i+1)begin
		c = mid(input,i,1);
		if(c==chr(92))then begin
			c = chr(92) & chr(92);
		end;
		
		if(asc(c)<32)then begin
			c = "";
		end;
		
		res = res & c;
	end;
	
	NormalizeStrToJsonMy = NormalizeStrToJson(res);
	
return;
end;

function string 255 NormalizeStrToJsonMyNum(string input)
begin
	integer i;
	string 5 c;
	string 255 res;
	
	if(blank(input))then begin
		NormalizeStrToJsonMyNum = "null";
	end else begin
		NormalizeStrToJsonMyNum = input;
	end;
	
	
	
return;
end;




global webpublic procedure WebCreateINForImport()
begin
	record INVc INr;
	area fill;
	boolean coma;
	longint counter;
	boolean TrHs,testf;
	
	counter = 0;
	setcompany(1,false);
	setfileonserver(true);
	addtexttoarea("{\"Items\":[" & chr(13) & chr(10),fill);
	TrHs = true;
	while(loopmain(INr,1,TrHs))begin
		testf = true;
		
		if(INr.Disp1=="USER")then begin
			testf = false;
		end;
		
		if(testf)then begin
			counter = counter+1;
		
			if(counter>1666)then begin
				TrHs = false;
			end;
			if(coma)then begin
				addtexttoarea("," & chr(13) & chr(10),fill);
			end;
			addtexttoarea("{",fill);
				//text
				addtexttoarea("\"id\":" & counter,fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCode\":" & "\"" & NormalizeStrToJsonMy(INr.Code) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fName\":" & "\"" & NormalizeStrToJsonMy(INr.Name) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fGroup\":" & "\"" & NormalizeStrToJsonMy(INr.Group) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fBrand\":" & "\"" & NormalizeStrToJsonMy(INr.Group) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fUnittext\":" & "\"" & NormalizeStrToJsonMy(INr.Unittext) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fDispGroups\":" & "\"" & NormalizeStrToJsonMy(INr.DispGroups) & "\"",fill);addtexttoarea(",",fill);
				
				addtexttoarea("\"fSalesAcc\":" & "\"" & NormalizeStrToJsonMy(INr.SalesAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCostAcc\":" & "\"" & NormalizeStrToJsonMy(INr.CostAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fVATCode\":" & "\"" & NormalizeStrToJsonMy(INr.VATCode) & "\"",fill);addtexttoarea(",",fill);
				
				//vals
				addtexttoarea("\"fTerminated\":" & NormalizeStrToJsonMyNum(INr.Terminated),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fUPrice1\":" & NormalizeStrToJsonMyNum(INr.UPrice1),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fItemType\":" & NormalizeStrToJsonMyNum(INr.ItemType),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fSerNrf\":" & NormalizeStrToJsonMyNum(INr.SerNrf),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fInPrice\":" & NormalizeStrToJsonMyNum(INr.InPrice),fill);addtexttoarea(",",fill);
				
				
				addtexttoarea("\"datadef\":" & "\"Items\"",fill);
				addtexttoarea("}",fill);	
				coma = true;
			end;		
		
	end;
	addtexttoarea(chr(13) & chr(10) & "]}",fill);
	
	writeareatofile(fill,"items.json",0);
	
return;
end;

global webpublic procedure WebCreateCUINForImport()
begin
	record INVc INr;
	area fill;
	boolean coma;
	longint counter;
	boolean TrHs,testf;
	
	counter = 0;
	setcompany(1,false);
	setfileonserver(true);
	addtexttoarea("{\"ServiceTools\":[" & chr(13) & chr(10),fill);
	TrHs = true;
	while(loopmain(INr,1,TrHs))begin
		testf = true;
		
		if(INr.Disp1!="USER")then begin
			testf = false;
		end;
		
		if(testf)then begin
			counter = counter+1;
		
			if(counter>1666)then begin
				//TrHs = false;
			end;
			if(coma)then begin
				addtexttoarea("," & chr(13) & chr(10),fill);
			end;
			addtexttoarea("{",fill);
				//text
				addtexttoarea("\"id\":" & counter,fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCode\":" & "\"" & NormalizeStrToJsonMy(INr.Code) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fName\":" & "\"" & NormalizeStrToJsonMy(INr.Name) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fBrand\":" & "\"" & NormalizeStrToJsonMy(INr.Group) & "\"",fill);addtexttoarea(",",fill);
				
				addtexttoarea("\"datadef\":" & "\"ServiceTools\"",fill);
				addtexttoarea("}",fill);	
				coma = true;
			end;		
		
	end;
	addtexttoarea(chr(13) & chr(10) & "]}",fill);
	
	writeareatofile(fill,"ServiceTools.json",0);
	
return;
end;

global webpublic procedure WebCreateCUForImport()
begin
	record CUVc CUr;
	area fill;
	boolean coma;
	longint counter;
	boolean TrHs,testf;
	
	counter = 0;
	setcompany(1,false);
	setfileonserver(true);
	addtexttoarea("{\"Contacts\":[" & chr(13) & chr(10),fill);
	TrHs = true;
	while(loopmain(CUr,1,TrHs))begin
		testf = true;
		
		if(CUr.Name=="Ремзона")then begin
			testf = false;
		end;
		if(CUr.Name=="Новый контакт")then begin
			testf = false;
		end;
		
		if(testf)then begin
			counter = counter+1;
		
			if(counter>1666)then begin
				//TrHs = false;
			end;
			if(coma)then begin
				addtexttoarea("," & chr(13) & chr(10),fill);
			end;
			addtexttoarea("{",fill);
				addtexttoarea("\"id\":" & counter,fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCode\":" & "\"" & NormalizeStrToJsonMy(CUr.Code) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fName\":" & "\"" & NormalizeStrToJsonMy(CUr.Name) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCustCat\":" & "\"" & NormalizeStrToJsonMy(CUr.CustCat) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fVECat\":" & "\"" & NormalizeStrToJsonMy(CUr.VECat) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCUType\":" & NormalizeStrToJsonMy(CUr.CUType),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fVEType\":" & NormalizeStrToJsonMy(CUr.VEType),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fEmployeeType\":" & NormalizeStrToJsonMy(CUr.EmployeeType),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fInvAddr0\":" & "\"" & NormalizeStrToJsonMy(CUr.InvAddr0) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fPhone\":" & "\"" & NormalizeStrToJsonMy(CUr.Phone) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fPhone1\":" & "\"" & NormalizeStrToJsonMy(CUr.Mobile) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fEMail\":" & "\"" & NormalizeStrToJsonMy(CUr.eMail) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fClassification\":" & "\"" & NormalizeStrToJsonMy(CUr.Classification) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fWwwAddr\":" & "\"" & NormalizeStrToJsonMy(CUr.wwwAddr) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fBlockedFlag\":" & NormalizeStrToJsonMy(CUr.blockedFlag),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fOnHoldFlag\":" & NormalizeStrToJsonMy(CUr.OnHoldFlag),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fPLCode\":" & "\"" & NormalizeStrToJsonMy(CUr.PLCode) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fRebCode\":" & "\"" & NormalizeStrToJsonMy(CUr.RebCode) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fAccAP\":" & "\"" & NormalizeStrToJsonMy(CUr.AccAP) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fAccCost\":" & "\"" & NormalizeStrToJsonMy(CUr.AccCost) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fOnAccAccAP\":" & "\"" & NormalizeStrToJsonMy(CUr.OnAccAccAP) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fObjects\":" & "\"" & NormalizeStrToJsonMy(CUr.Objects) & "\"",fill);addtexttoarea(",",fill);

				addtexttoarea("\"datadef\":" & "\"Contacts\"",fill);
				addtexttoarea("}",fill);	
				coma = true;
			end;		
		
	end;
	addtexttoarea(chr(13) & chr(10) & "]}",fill);
	
	writeareatofile(fill,"contacts.json",0);
	
return;
end;


global webpublic procedure WebCreateDIForImport()
begin
	record DIVc DIr;
	area fill;
	boolean coma;
	longint counter;
	boolean TrHs,testf;
	
	counter = 0;
	setcompany(1,false);
	setfileonserver(true);
	addtexttoarea("{\"ItemClassifications\":[" & chr(13) & chr(10),fill);
	TrHs = true;
	while(loopmain(DIr,1,TrHs))begin
		testf = true;
		
		if(testf)then begin
			counter = counter+1;
		
			if(coma)then begin
				addtexttoarea("," & chr(13) & chr(10),fill);
			end;
			addtexttoarea("{",fill);
				//text
				addtexttoarea("\"id\":" & counter,fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCode\":" & "\"" & NormalizeStrToJsonMy(DIr.Code) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fName\":" & "\"" & NormalizeStrToJsonMy(DIr.Name) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fDispGroups\":" & "\"" & NormalizeStrToJsonMy(DIr.DispGroups) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCType\":" & "\"" & NormalizeStrToJsonMy(DIr.CType) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fColnr\":" & "\"" & NormalizeStrToJsonMy(DIr.colnr) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"datadef\":" & "\"ItemClassifications\"",fill);
				
				addtexttoarea("}",fill);	
				coma = true;
			end;		
		
	end;
	addtexttoarea(chr(13) & chr(10) & "]}",fill);
	
	writeareatofile(fill,"ItemClassifications.json",0);
	
return;
end;

global webpublic procedure WebCreateCClassForImport()
begin
	record CClassVc CClassr;
	area fill;
	boolean coma;
	longint counter;
	boolean TrHs,testf;
	
	counter = 0;
	setcompany(1,false);
	setfileonserver(true);
	addtexttoarea("{\"ContactClassifications\":[" & chr(13) & chr(10),fill);
	TrHs = true;
	while(loopmain(CClassr,1,TrHs))begin
		testf = true;
		
		if(testf)then begin
			counter = counter+1;
		
			if(coma)then begin
				addtexttoarea("," & chr(13) & chr(10),fill);
			end;
			addtexttoarea("{",fill);
				//text
				addtexttoarea("\"fCode\":" & "\"" & NormalizeStrToJsonMy(CClassr.Code) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fComment\":" & "\"" & NormalizeStrToJsonMy(CClassr.Comment) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCType\":" & "\"" & NormalizeStrToJsonMy(CClassr.CType) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"datadef\":" & "\"ContactClassifications\"",fill);
				
				addtexttoarea("}",fill);	
				coma = true;
			end;		
		
	end;
	addtexttoarea(chr(13) & chr(10) & "]}",fill);
	
	writeareatofile(fill,"ContactClassifications.json",0);
	
return;
end;

global webpublic procedure WebCreateACCForImport()
begin
	record AccVc Accr;
	area fill;
	boolean coma;
	longint counter;
	boolean TrHs,testf;
	
	counter = 0;
	setcompany(1,false);
	setfileonserver(true);
	addtexttoarea("{\"Accounts\":[" & chr(13) & chr(10),fill);
	TrHs = true;
	while(loopmain(Accr,1,TrHs))begin
		testf = true;
		
		if(testf)then begin
			counter = counter+1;
		
			if(coma)then begin
				addtexttoarea("," & chr(13) & chr(10),fill);
			end;
			addtexttoarea("{",fill);
				//text
				addtexttoarea("\"fAccNumber\":" & "\"" & NormalizeStrToJsonMy(Accr.AccNumber) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fComment\":" & "\"" & NormalizeStrToJsonMy(Accr.Comment) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fAccType\":" & "\"" & NormalizeStrToJsonMy(Accr.AccType) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fVATCode\":" & "\"" & NormalizeStrToJsonMy(Accr.VATCode) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCurncy\":" & "\"" & NormalizeStrToJsonMy(Accr.Curncy) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fConsAccNumber\":" & "\"" & NormalizeStrToJsonMy(Accr.ConsAccNumber) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fObjects\":" & "\"" & NormalizeStrToJsonMy(Accr.Objects) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fSRUCode\":" & "\"" & NormalizeStrToJsonMy(Accr.SRUCode) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fPeriodCode\":" & "\"" & NormalizeStrToJsonMy(Accr.PeriodCode) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fTransAutCode\":" & "\"" & NormalizeStrToJsonMy(Accr.TransAutCode) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fAccClass\":" & "\"" & NormalizeStrToJsonMy(Accr.AccClass) & "\"",fill);addtexttoarea(",",fill);
				
				//vals
				addtexttoarea("\"fNVD\":" & NormalizeStrToJsonMyNum(Accr.NVD),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fNVC\":" & NormalizeStrToJsonMyNum(Accr.NVC),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fblockedFlag\":" & NormalizeStrToJsonMyNum(Accr.blockedFlag),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fControlType\":" & NormalizeStrToJsonMyNum(Accr.ControlType),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fConspr\":" & NormalizeStrToJsonMyNum(Accr.Conspr),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fExclFrRep\":" & NormalizeStrToJsonMyNum(Accr.ExclFrRep),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fGroupAcc\":" & NormalizeStrToJsonMyNum(Accr.GroupAcc),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fNotBalSheet\":" & NormalizeStrToJsonMyNum(Accr.NotBalSheet),fill);addtexttoarea(",",fill);

				addtexttoarea("\"datadef\":" & "\"Accounts\"",fill);
				
				addtexttoarea("}",fill);	
				coma = true;
			end;		
		
	end;
	addtexttoarea(chr(13) & chr(10) & "]}",fill);
	
	writeareatofile(fill,"Accounts.json",0);
	
return;
end;

global webpublic procedure WebCreateObjForImport()
begin
	record ObjVc Objr;
	area fill;
	boolean coma;
	longint counter;
	boolean TrHs,testf;
	
	counter = 0;
	setcompany(1,false);
	setfileonserver(true);
	addtexttoarea("{\"Objects\":[" & chr(13) & chr(10),fill);
	TrHs = true;
	while(loopmain(Objr,1,TrHs))begin
		testf = true;
		
		if(testf)then begin
			counter = counter+1;
		
			if(coma)then begin
				addtexttoarea("," & chr(13) & chr(10),fill);
			end;
			addtexttoarea("{",fill);
				//text
				addtexttoarea("\"fCode\":" & "\"" & NormalizeStrToJsonMy(Objr.Code) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fComment\":" & "\"" & NormalizeStrToJsonMy(Objr.Comment) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fOTCode\":" & "\"" & NormalizeStrToJsonMy(Objr.OTCode) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fAutoObjects\":" & "\"" & NormalizeStrToJsonMy(Objr.AutoObjects) & "\"",fill);addtexttoarea(",",fill);
				
				//vals
				addtexttoarea("\"fMultiYear\":" & NormalizeStrToJsonMyNum(Objr.MultiYear),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fTerminateFlag\":" & NormalizeStrToJsonMyNum(Objr.TerminateFlag),fill);addtexttoarea(",",fill);

				addtexttoarea("\"datadef\":" & "\"Objects\"",fill);
				
				addtexttoarea("}",fill);	
				coma = true;
			end;		
		
	end;
	addtexttoarea(chr(13) & chr(10) & "]}",fill);
	
	writeareatofile(fill,"Objects.json",0);
	
return;
end;

global webpublic procedure WebCreateAccBlockForImport()
begin
	record AccBlock Accr;
	area fill;
	boolean coma;
	longint counter;
	boolean TrHs,testf;
	
	counter = 0;
	setcompany(1,false);
	setfileonserver(true);
	addtexttoarea("{\"AccountUsage\":[" & chr(13) & chr(10),fill);
	TrHs = true;
	blockload(Accr);
	//while(loopmain(Objr,1,TrHs))begin
		testf = true;
		
		if(testf)then begin
			counter = counter+1;
		
			if(coma)then begin
				addtexttoarea("," & chr(13) & chr(10),fill);
			end;
			addtexttoarea("{",fill);
				//text
				addtexttoarea("\"fARAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.ARAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fRndAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.RndAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCredAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.CredAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fERebAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.ERebAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fVATBAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.VATBAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCashAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.CashAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fVATERAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.VATERAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fIVRef\":" & "\"" & NormalizeStrToJsonMy(Accr.IVRef) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fIPRef\":" & "\"" & NormalizeStrToJsonMy(Accr.IPRef) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fExtraCostAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.ExtraCostAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fRateGainAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.RateGainAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fRateLossAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.RateLossAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fRateRndOffAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.RateRndOffAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fStockAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.StockAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fPurchAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.PurchAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fStockCostAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.StockCostAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fDomSalesAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.DomSalesAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fEUSalesAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.EUSalesAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fExpSalesAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.ExpSalesAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fOnAccAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.OnAccAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fVATCodeDom\":" & "\"" & NormalizeStrToJsonMy(Accr.VATCodeDom) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fVATCodeEU\":" & "\"" & NormalizeStrToJsonMy(Accr.VATCodeEU) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fVATCodeExp\":" & "\"" & NormalizeStrToJsonMy(Accr.VATCodeExp) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fStockGainAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.StockGainAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fPUExtraAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.PUExtraAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fPUFreightAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.PUFreightAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fPUCustomsAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.PUCustomsAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fOnAccVATAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.OnAccVATAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fReturnedAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.ReturnedAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fEMURndOffAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.EMURndOffAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fEMUWriteOffAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.EMUWriteOffAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fBaseRoundOffAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.BaseRoundOffAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fProdICostAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.ProdICostAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fProdWCostAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.ProdWCostAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCashBackAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.CashBackAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCommisionAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.CommisionAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fIPCostObj\":" & "\"" & NormalizeStrToJsonMy(Accr.IPCostObj) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fPUCost1\":" & "\"" & NormalizeStrToJsonMy(Accr.PUCost1) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fPUCost2\":" & "\"" & NormalizeStrToJsonMy(Accr.PUCost2) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fPUCost3\":" & "\"" & NormalizeStrToJsonMy(Accr.PUCost3) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fPUCost4\":" & "\"" & NormalizeStrToJsonMy(Accr.PUCost4) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fPUCost5\":" & "\"" & NormalizeStrToJsonMy(Accr.PUCost5) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fSalesVAT\":" & "\"" & NormalizeStrToJsonMy(Accr.SalesVAT) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fSalesTAX\":" & "\"" & NormalizeStrToJsonMy(Accr.SalesTAX) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fBadARAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.BadARAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCredDomSalesAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.CredDomSalesAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCredEUSalesAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.CredEUSalesAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCredExpSalesAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.CredExpSalesAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCredVATCodeDom\":" & "\"" & NormalizeStrToJsonMy(Accr.CredVATCodeDom) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCredVATCodeEU\":" & "\"" & NormalizeStrToJsonMy(Accr.CredVATCodeEU) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCredVATCodeExp\":" & "\"" & NormalizeStrToJsonMy(Accr.CredVATCodeExp) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fINTransferAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.INTransferAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fBankRateGainAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.BankRateGainAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fBankRateLossAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.BankRateLossAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fPreIPVATAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.PreIPVATAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fIntARAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.IntARAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fIntDomSalesAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.IntDomSalesAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fItemPriceVar\":" & "\"" & NormalizeStrToJsonMy(Accr.ItemPriceVar) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCost1PriceVar\":" & "\"" & NormalizeStrToJsonMy(Accr.Cost1PriceVar) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCost2PriceVar\":" & "\"" & NormalizeStrToJsonMy(Accr.Cost2PriceVar) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCost3PriceVar\":" & "\"" & NormalizeStrToJsonMy(Accr.Cost3PriceVar) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCost4PriceVar\":" & "\"" & NormalizeStrToJsonMy(Accr.Cost4PriceVar) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCost5PriceVar\":" & "\"" & NormalizeStrToJsonMy(Accr.Cost5PriceVar) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCustomsPriceVar\":" & "\"" & NormalizeStrToJsonMy(Accr.CustomsPriceVar) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fFreightPriceVar\":" & "\"" & NormalizeStrToJsonMy(Accr.FreightPriceVar) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fRetPUAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.RetPUAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fBookedDiscount\":" & "\"" & NormalizeStrToJsonMy(Accr.BookedDiscount) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fDiscountAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.DiscountAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fStockLossAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.StockLossAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fEUStockCostAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.EUStockCostAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fExpStockCostAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.ExpStockCostAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fEUPurchAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.EUPurchAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fExpPurchAcc\":" & "\"" & NormalizeStrToJsonMy(Accr.ExpPurchAcc) & "\"",fill);addtexttoarea(",",fill);
				
				
				//vals
				addtexttoarea("\"fDoCosts\":" & NormalizeStrToJsonMyNum(Accr.DoCosts),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fRevInclVAT\":" & NormalizeStrToJsonMyNum(Accr.RevInclVAT),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fSLAccTest\":" & NormalizeStrToJsonMyNum(Accr.SLAccTest),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fARUseObj\":" & NormalizeStrToJsonMyNum(Accr.ARUseObj),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fInvUpdStock\":" & NormalizeStrToJsonMyNum(Accr.InvUpdStock),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCredUpdStockx\":" & NormalizeStrToJsonMyNum(Accr.CredUpdStockx),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fVATCodeCtrl\":" & NormalizeStrToJsonMyNum(Accr.VATCodeCtrl),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fBasePriceInclVAT\":" & NormalizeStrToJsonMyNum(Accr.BasePriceInclVAT),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fIPBookVAT\":" & NormalizeStrToJsonMyNum(Accr.IPBookVAT),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fDiscCashVAT\":" & NormalizeStrToJsonMyNum(Accr.DiscCashVAT),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fARonTR\":" & NormalizeStrToJsonMyNum(Accr.ARonTR),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fDemandPPNo\":" & NormalizeStrToJsonMyNum(Accr.DemandPPNo),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fUpdBaseRate\":" & NormalizeStrToJsonMyNum(Accr.UpdBaseRate),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fUpdForeginRate\":" & NormalizeStrToJsonMyNum(Accr.UpdForeginRate),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCorSalesAcc\":" & NormalizeStrToJsonMyNum(Accr.CorSalesAcc),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCredInvWithNo\":" & NormalizeStrToJsonMyNum(Accr.CredInvWithNo),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fForceUniquePP\":" & NormalizeStrToJsonMyNum(Accr.ForceUniquePP),fill);addtexttoarea(",",fill);
				addtexttoarea("\"CredSalesAccsf\":" & NormalizeStrToJsonMyNum(Accr.CredSalesAccs),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fIPTransBankRowPerCU\":" & NormalizeStrToJsonMyNum(Accr.IPTransBankRowPerCU),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fPreIPBookVAT\":" & NormalizeStrToJsonMyNum(Accr.PreIPBookVAT),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fBookCreditOnPurchAcc\":" & NormalizeStrToJsonMyNum(Accr.BookCreditOnPurchAcc),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fObjectonBankAcc\":" & NormalizeStrToJsonMyNum(Accr.ObjectonBankAcc),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fNoWarnOnDupVATnoOnCU\":" & NormalizeStrToJsonMyNum(Accr.NoWarnOnDupVATnoOnCU),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fNoTAXonVAT\":" & NormalizeStrToJsonMyNum(Accr.NoTAXonVAT),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fChronologyforInvNo\":" & NormalizeStrToJsonMyNum(Accr.ChronologyforInvNo),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fSkipObjectsOnIVFromHeader\":" & NormalizeStrToJsonMyNum(Accr.SkipObjectsOnIVFromHeader),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fVATUseObj\":" & NormalizeStrToJsonMyNum(Accr.VATUseObj),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fBookPriceVar\":" & NormalizeStrToJsonMyNum(Accr.BookPriceVar),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fUsePUAccInRetPU\":" & NormalizeStrToJsonMyNum(Accr.UsePUAccInRetPU),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fNoOverPayIV\":" & NormalizeStrToJsonMyNum(Accr.NoOverPayIV),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fBookVATOnlyFromDownpayment\":" & NormalizeStrToJsonMyNum(Accr.BookVATOnlyFromDownpayment),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fBookVATonRateGain\":" & NormalizeStrToJsonMyNum(Accr.BookVATonRateGain),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fNoAutAutoTransOnCredIV\":" & NormalizeStrToJsonMyNum(Accr.NoAutAutoTransOnCredIV),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fSetDisputedFlagsOnCredIV\":" & NormalizeStrToJsonMyNum(Accr.SetDisputedFlagsOnCredIV),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fPrintNegAmountsCredNote\":" & NormalizeStrToJsonMyNum(Accr.PrintNegAmountsCredNote),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fDueDateBasedOnServDelDate\":" & NormalizeStrToJsonMyNum(Accr.DueDateBasedOnServDelDate),fill);addtexttoarea(",",fill);
				addtexttoarea("\"fNoPasteVATToIP\":" & NormalizeStrToJsonMyNum(Accr.NoPasteVATToIP),fill);addtexttoarea(",",fill);
				
				addtexttoarea("\"datadef\":" & "\"AccountUsage\"",fill);
				
				addtexttoarea("}",fill);	
				coma = true;
			end;		
		
	//end;
	addtexttoarea(chr(13) & chr(10) & "]}",fill);
	
	writeareatofile(fill,"AccountUsage.json",0);
	
return;
end;

global webpublic procedure WebCreateSalesGroupForImport()
begin
	record SalesGroupVc SGr;
	area fill;
	boolean coma;
	longint counter;
	boolean TrHs,testf;
	
	counter = 0;
	setcompany(1,false);
	setfileonserver(true);
	addtexttoarea("{\"SalesGroup\":[" & chr(13) & chr(10),fill);
	TrHs = true;
	while(loopmain(SGr,1,TrHs))begin
		testf = true;
		
		
		if(testf)then begin
			counter = counter+1;
		
			if(counter>1666)then begin
				//TrHs = false;
			end;
			if(coma)then begin
				addtexttoarea("," & chr(13) & chr(10),fill);
			end;
			addtexttoarea("{",fill);
				//text
				addtexttoarea("\"id\":" & counter,fill);addtexttoarea(",",fill);
				addtexttoarea("\"fSGroupCode\":" & "\"" & NormalizeStrToJsonMy(SGr.SGroupCode) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fSGroupName\":" & "\"" & NormalizeStrToJsonMy(SGr.SGroupName) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fSGroupSeries\":" & "\"" & NormalizeStrToJsonMy(SGr.SGroupSeries) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fObjects\":" & "\"" & NormalizeStrToJsonMy(SGr.Objects) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fInnerOrderNr\":" & "\"" & NormalizeStrToJsonMy(SGr.InnerOrderNr) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"datadef\":" & "\"SalesGroup\"",fill);
				addtexttoarea("}",fill);	
				coma = true;
			end;		
		
	end;
	addtexttoarea(chr(13) & chr(10) & "]}",fill);
	
	writeareatofile(fill,"SalesGroup.json",0);
	
return;
end;

global webpublic procedure WebCreateLocationsForImport()
begin
	area fill;
	boolean coma;
	longint counter;
	boolean TrHs,testf;
	record LocationVc Lr;
	
	counter = 0;
	setcompany(1,false);
	setfileonserver(true);
	addtexttoarea("{\"Locations\":[" & chr(13) & chr(10),fill);
	TrHs = true;
	while(loopmain(Lr,1,TrHs))begin
		testf = true;
		
		
		if(testf)then begin
			counter = counter+1;
		
			if(counter>1666)then begin
				//TrHs = false;
			end;
			if(coma)then begin
				addtexttoarea("," & chr(13) & chr(10),fill);
			end;
			addtexttoarea("{",fill);
				//text
				addtexttoarea("\"id\":" & counter,fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCode\":" & "\"" & NormalizeStrToJsonMy(Lr.Code) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fName\":" & "\"" & NormalizeStrToJsonMy(Lr.Name) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fStockAcc\":" & "\"" & NormalizeStrToJsonMy(Lr.StockAcc) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"datadef\":" & "\"Locations\"",fill);
				addtexttoarea("}",fill);	
				coma = true;
			end;		
		
	end;
	addtexttoarea(chr(13) & chr(10) & "]}",fill);
	
	writeareatofile(fill,"Locations.json",0);
	
return;
end;

global webpublic procedure WebCreatePayModeForImport()
begin
	record PMBlock PMb;
	row PMBlock PMrw;
	area fill,fil;
	boolean coma;
	longint counter;
	integer mtrw,i;
	boolean TrHs,testf;
	
	blockload(PMb);
	
	addtexttoarea("{\"PaymentMode\":[" & chr(13) & chr(10),fill);
		
		
			addtexttoarea("{",fill);
				//text
				addtexttoarea("\"id\":" & 1,fill);addtexttoarea(",",fill);
				addtexttoarea("\"datadef\":" & "\"PaymentMode\"",fill);
				addtexttoarea("}",fill);	
	addtexttoarea(chr(13) & chr(10) & "]}",fill);
	
	writeareatofile(fill,"PaymentMode.json",0);
	
	mtrw = matrowcnt(PMb);
	counter = 0;
	setcompany(1,false);
	setfileonserver(true);
	addtexttoarea("{\"PaymentModeMatrix\":[" & chr(13) & chr(10),fil);
	TrHs = true;
	for (i=0;i<mtrw;i=i+1) begin
		testf = true;
		matrowget(PMb,i,PMrw);
		
		if(testf)then begin
			counter = counter+1;
		
			if(counter>1666)then begin
				//TrHs = false;
			end;
			if(coma)then begin
				addtexttoarea("," & chr(13) & chr(10),fil);
			end;
			addtexttoarea("{",fil);
				//text
				addtexttoarea("\"id\":" & 1,fil);addtexttoarea(",",fil);
				addtexttoarea("\"fCode\":" & "\"" & NormalizeStrToJsonMy(PMrw.Code) & "\"",fil);addtexttoarea(",",fil);
				addtexttoarea("\"fComment\":" & "\"" & NormalizeStrToJsonMy(PMrw.Comment) & "\"",fil);addtexttoarea(",",fil);
				addtexttoarea("\"fAccNr\":" & "\"" & NormalizeStrToJsonMy(PMrw.AccNr) & "\"",fil);addtexttoarea(",",fil);
				addtexttoarea("\"position\":" & "\"" & counter & "\"",fil);addtexttoarea(",",fil);
				addtexttoarea("\"recordId\":" & "\"" & counter & "\"",fil);addtexttoarea(",",fil);
				addtexttoarea("\"datadef\":" & "\"PaymentModeMatrix\"",fil);
				addtexttoarea("}",fil);	
				coma = true;	
		end;
	end;
	addtexttoarea(chr(13) & chr(10) & "]}",fil);
	
	writeareatofile(fil,"PaymentModeMatrix.json",0);
	
return;
end;

global webpublic procedure WebCreateUsersForImport()
begin
	record UserVc Ur;
	area fill;
	boolean coma;
	longint counter;
	boolean TrHs,testf;
	
	counter = 0;
	setcompany(1,false);
	setfileonserver(true);
	addtexttoarea("{\"Users\":[" & chr(13) & chr(10),fill);
	TrHs = true;
	while(loopmain(Ur,1,TrHs))begin
		testf = true;
		
		
		if(testf)then begin
			counter = counter+1;
		
			if(counter>1666)then begin
				//TrHs = false;
			end;
			if(coma)then begin
				addtexttoarea("," & chr(13) & chr(10),fill);
			end;
			addtexttoarea("{",fill);
				//text
				addtexttoarea("\"id\":" & counter,fill);addtexttoarea(",",fill);
				addtexttoarea("\"login\":" & "\"" & NormalizeStrToJsonMy(Ur.Code) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"firstName\":" & "\"" & NormalizeStrToJsonMy(Ur.Name) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"role\":" & "\"" & NormalizeStrToJsonMy(Ur.AccessGroup) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"defaultAccess\":" & "\"" & NormalizeStrToJsonMy(2) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"datadef\":" & "\"Users\"",fill);
				addtexttoarea("}",fill);	
				coma = true;
			end;		
		
	end;
	addtexttoarea(chr(13) & chr(10) & "]}",fill);
	
	writeareatofile(fill,"Users.json",0);
	
return;
end;

global webpublic procedure WebCreateGroupsForImport()
begin
	record ITVc ITr;
	area fill;
	boolean coma;
	longint counter;
	boolean TrHs,testf;
	
	counter = 0;
	setcompany(1,false);
	setfileonserver(true);
	addtexttoarea("{\"ItemGroups\":[" & chr(13) & chr(10),fill);
	TrHs = true;
	while(loopmain(ITr,1,TrHs))begin
		testf = true;
		
		
		if(testf)then begin
			counter = counter+1;
		
			if(counter>1666)then begin
				//TrHs = false;
			end;
			if(coma)then begin
				addtexttoarea("," & chr(13) & chr(10),fill);
			end;
			addtexttoarea("{",fill);
				//text
				addtexttoarea("\"id\":" & counter,fill);addtexttoarea(",",fill);
				addtexttoarea("\"fCode\":" & "\"" & NormalizeStrToJsonMy(ITr.Code) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"fComment\":" & "\"" & NormalizeStrToJsonMy(ITr.Comment) & "\"",fill);addtexttoarea(",",fill);
				addtexttoarea("\"datadef\":" & "\"ItemGroups\"",fill);
				addtexttoarea("}",fill);	
				coma = true;
			end;		
		
	end;
	addtexttoarea(chr(13) & chr(10) & "]}",fill);
	
	writeareatofile(fill,"ItemGroups.json",0);
	setfileonserver(false);
return;
end;


global webpublic updating procedure WebDeleteOldRHist()
begin
	record RHistVc RHistr;
	longint cnt;
	
	cnt = 0;
	logtext(0,"WebDeleteOldRHist start");
	while(loopmain(RHistr,1,true))begin
		if(RHistr.TransDate<stringtodate("1/1/2019"))then begin
			recorddelete(RHistr);
			stepback(RHistr);
			cnt = cnt + 1;
			if(cnt>10000)then begin
				cnt = 0;
				logtext(0,"deleted 100 RH");
			end;
		end;
	end;
	logtext(0,"WebDeleteOldRHist Finish");

return;
end;

global webpublic procedure WebCreateTRVcCSV()
begin
	record TRVc TRr;
	row TRVc TRrw;
	area aheader,amatrix;
	boolean coma;
	longint headercounter,matrixcounter;
	boolean TrHs,testf;
	integer i,rwcnt;
	string 100 regname;
	
	setcompany(1,false);
	setfileonserver(true);
	addtexttoarea("\"id\"|\"fNumber\"|\"fRegDate\"|\"fComment\"|\"fTransDate\"|\"fSign\"|\"fDSum\"|\"fCSum\"|\"fDiffVal\"|\"fRefStr\"|\"fXMainf\"|\"fIntYc\"|\"fXBalf\"|\"fExpf\"|\"",aheader);
	addtexttoarea("fExportedFlag\"|\"fDSum2\"|\"fCSum2\"|\"fDiff2Val\"|\"fLastChangeDate\"|\"fFileName\"|\"fTransNr\"|\"fSeqNr\"|\"fRegTime\"|\"fChatId\"|\"createdAt\"|\"updatedAt\"|\"_search__fulltext\"" & chr(13) & chr(10),aheader);
	addtexttoarea("\"id\"|\"fStp\"|\"fOvst\"|\"fAccNumber\"|\"fObjects\"|\"fDebVal\"|\"fCredVal\"|\"fVATCode\"|\"fQty\"|\"fCurDebVal\"|\"fCurCredVal\"|\"fToRateB1\"|\"fComment\"|\"fCurncy\"",amatrix);
	addtexttoarea("|\"fBRSerNr\"|\"fBRRowNr\"|\"fNomVal\"|\"fCompCode\"|\"fTyp\"|\"fSerNr\"|\"fDueDate\"|\"fCorspSer\"|\"fUpdDate\"|\"fSign\"|\"fOldTransDate\"|\"fCorrNr\"|\"fCorrDate\"|\"fCorrYc\"|\"fReconsf\"|\"fFrRate\"",amatrix);
	addtexttoarea("|\"fToRateB2\"|\"fDebVal2\"|\"fCredVal2\"|\"fBaseRate1\"|\"fBaseRate2\"|\"fACShort\"|\"fReconCode\"|\"fTAccNumber\"|\"fTFromFileName\"|\"fTFromCode\"|\"fSAFTType\"|\"fReconDate\"|\"fExtraComment\"|\"fRvrsVATCode\"|\"fUIDRows\"|\"recordId\"|\"position\"|\"createdAt\"|\"updatedAt\"" & chr(13) & chr(10),amatrix);
	
	matrixcounter = 1;
	headercounter = 1;
	
	TrHs = true;
	while(loopmain(TRr,1,TrHs))begin
		testf = true;
		
		rwcnt = matrowcnt(TRr);
		for(i=0;i<rwcnt;i=i+1)begin
			matrowget(TRr,i,TRrw);
			if(TRrw.stp==1 and TRrw.ovst==0 and nonblank(TRrw.AccNumber))then begin
				addtexttoarea("" & matrixcounter & "|",amatrix);
				addtexttoarea("" & TRrw.stp & "|",amatrix);
				addtexttoarea("" & TRrw.ovst & "|",amatrix);
				addtexttoarea("\"" & TRrw.AccNumber & "\"|",amatrix);
				addtexttoarea("\"" & TRrw.Objects & "\"|",amatrix);
				addtexttoarea("" & TRrw.DebVal & "|",amatrix);
				addtexttoarea("" & TRrw.CredVal & "|",amatrix);
				addtexttoarea("\"" & TRrw.VATCode & "\"|",amatrix);
				addtexttoarea("" & TRrw.Qty & "|",amatrix);
				addtexttoarea("" & TRrw.CurDebVal & "|",amatrix);
				addtexttoarea("" & TRrw.CurCredVal & "|",amatrix);
				addtexttoarea("" & TRrw.ToRateB1 & "|",amatrix);
				addtexttoarea("\"" & TRrw.Comment & "\"|",amatrix);
				addtexttoarea("\"" & TRrw.Curncy & "\"|",amatrix);
				addtexttoarea("" & TRrw.BRSerNr & "|",amatrix);
				addtexttoarea("" & TRrw.BRRowNr & "|",amatrix);
				addtexttoarea("" & TRrw.NomVal & "|",amatrix);
				addtexttoarea("\"" & TRrw.CompCode & "\"|",amatrix);
				addtexttoarea("" & TRrw.Typ & "|",amatrix);
				addtexttoarea("" & TRrw.SerNr & "|",amatrix);
				addtexttoarea("\"" & TRrw.DueDate & "\"|",amatrix);
				addtexttoarea("\"" & TRrw.CorspSer & "\"|",amatrix);
				addtexttoarea("\"" & TRrw.UpdDate & "\"|",amatrix);
				addtexttoarea("\"" & TRrw.Sign & "\"|",amatrix);
				addtexttoarea("\"" & TRrw.OldTransDate & "\"|",amatrix);
				addtexttoarea("\"" & TRrw.CorrNr & "\"|",amatrix);
				addtexttoarea("\"" & TRrw.CorrDate & "\"|",amatrix);
				addtexttoarea("\"" & TRrw.CorrYc & "\"|",amatrix);
				addtexttoarea("\"" & TRrw.Reconsf & "\"|",amatrix);
				addtexttoarea("" & TRrw.FrRate & "|",amatrix);
				addtexttoarea("" & TRrw.ToRateB2 & "|",amatrix);
				addtexttoarea("" & TRrw.DebVal2 & "|",amatrix);
				addtexttoarea("" & TRrw.CredVal2 & "|",amatrix);
				addtexttoarea("" & TRrw.BaseRate1 & "|",amatrix);
				addtexttoarea("" & TRrw.BaseRate2 & "|",amatrix);
				addtexttoarea("\"" & TRrw.ACShort & "\"|",amatrix);
				addtexttoarea("\"" & TRrw.ReconCode & "\"|",amatrix);
				addtexttoarea("\"" & TRrw.TAccNumber & "\"|",amatrix);
				addtexttoarea("\"" & TRrw.TFromFileName & "\"|",amatrix);
				addtexttoarea("\"" & TRrw.TFromCode & "\"|",amatrix);
				addtexttoarea("\"" & TRrw.SAFTType & "\"|",amatrix);
				addtexttoarea("\"" & TRrw.ReconDate & "\"|",amatrix);
				addtexttoarea("\"" & TRrw.ExtraComment & "\"|",amatrix);
				addtexttoarea("\"" & TRrw.RvrsVATCode & "\"|",amatrix);
				addtexttoarea("\"\"|",amatrix);
				addtexttoarea("" & headercounter & "|",amatrix);
				addtexttoarea("" & i & "|",amatrix);
				addtexttoarea("\"\"|",amatrix);
				addtexttoarea("\"\"|",amatrix);
				addtexttoarea(chr(13) & chr(10),amatrix);
				matrixcounter = matrixcounter + 1;
			end;
		end;
		
		switch(TRr.IntYc)begin
			case"":regname = "";
		end;
		
		
		addtexttoarea("" & headercounter & "|",aheader)
		addtexttoarea("" & TRr.Number & "|",aheader)
		addtexttoarea("\"" & TRr.RegDate & "\"|",aheader)
		addtexttoarea("\"" & TRr.Comment & "\"|",aheader)
		addtexttoarea("\"" & TRr.TransDate & "\"|",aheader)
		addtexttoarea("\"" & TRr.Sign & "\"|",aheader)
		addtexttoarea("" & TRr.DSum & "|",aheader)
		addtexttoarea("" & TRr.CSum & "|",aheader)
		addtexttoarea("" & TRr.DiffVal & "|",aheader)
		addtexttoarea("\"" & TRr.RefStr & "\"|\"\"|",aheader)
		addtexttoarea("\"" & regname & "\"|\"\"|",aheader)
		addtexttoarea("\"" & TRr.Expf & "\"|",aheader)
		addtexttoarea("" & TRr.ExportedFlag &  "|",aheader)
		addtexttoarea("" & TRr.DSum2 & "|",aheader)
		addtexttoarea("" & TRr.CSum2 & "|",aheader)
		addtexttoarea("" & TRr.Diff2Val & "|",aheader)
		addtexttoarea("\"" & TRr.LastChangeDate & "\"|",aheader)
		addtexttoarea("\"" & TRr.FileName & "\"|",aheader)
		addtexttoarea("" & TRr.TransNr & "|",aheader)
		addtexttoarea("" & TRr.SeqNr & "|",aheader)
		addtexttoarea("\"" & TRr.RegTime & "\"|\"\"|\"\"|\"\"|\"\"",aheader);
		addtexttoarea(chr(13) & chr(10),aheader);
		headercounter = headercounter + 1;
	end;
	writeareatofile(aheader,"Transactions.csv",0);
	writeareatofile(amatrix,"TransactionsMatrix.csv",0);
	setfileonserver(false);
return;
end;

procedure addParamToJSONArea(string param, string value, var area req)
begin

AddTextToArea("\"" & param & "\":" &  "\"" & value & "\",",req);

return;
end;

procedure delLastComaInArea(var area req)
begin
	longint alen;
	string 1 lastsymb;
	area tmpar;
	
	alen = getarealength(req);
	lastsymb = getstringfromarea(req,alen-1,1);
	if(lastsymb==",")then begin
		getareafromarea(req,0,alen-1,tmpar);
		setareazerosize(req);
		getareafromarea(tmpar,0,getarealength(tmpar),req);
	end;

return;
end;

global updating procedure SendSVOToERPJs(var record SVOVc SVOr)
begin
	area req,reply,mainRequest, chatText;
	string 150 host,page;
	row SVOVc SVOrw;
	integer i;
	
	
	//https://s.erpjs.biz/service4/web/getJSONToCreate
	//host = "s.erpjs.biz";
	host = "127.0.0.1";
	page = "/service4/web/getJSONToCreate";
	//MySendWebRequest(host,443,-1,true,"POST",page,"application/json","",false,req,reply,5);
	addtexttoarea("POST " & "/service4/web/getJSONToCreate" & chr(13) & chr(10),req);
 	addtexttoarea("host: " & host & chr(13) & chr(10),req);
	addtexttoarea("Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.e30.hY62dZfW2QkxGkrS2p6GGj_AVqGuYRqmXsx4V3SDhyw" & chr(13) & chr(10),req);
	AddTextToArea("" & chr(13) & chr(10),req);
	AddTextToArea("{",req);
		
	addParamToJSONArea("fSerNr",SVOr.SerNr,req);
	addParamToJSONArea("fCustCode",SVOr.CustCode,req);
	addParamToJSONArea("fAddr0",SVOr.Addr0,req);
	addParamToJSONArea("fPhone",SVOr.Kontinfo1,req);
	addParamToJSONArea("fPhone2",SVOr.Phone2,req);
	addParamToJSONArea("fCustomField7",SVOr.CustomField7,req);
	addParamToJSONArea("fGetItemFlag",SVOr.GetItemFlag,req);
	addParamToJSONArea("fSalesGroup",NormalizeStrToJson(SVOr.SalesGroup),req);
	//addParamToJSONArea("fGetItemTime",SVOr.GetItemTime,req);
	addParamToJSONArea("fGetItemDate",SVOr.GetItemDate,req);
	addParamToJSONArea("fSumToPay",SVOr.WSCost,req);
	addParamToJSONArea("fInspector",NormalizeStrToJson(SVOr.Inspector),req);
	addParamToJSONArea("fOrderStatus",SVOr.OrderStatus,req);
	addParamToJSONArea("fDoneMark",SVOr.DoneMark,req);
	addParamToJSONArea("fTransDate",SVOr.TransDate,req);
	addParamToJSONArea("fRegDate",SVOr.RegDate,req);
	//addParamToJSONArea("fRegTime",SVOr.RegTime,req);
	addParamToJSONArea("fGarantyMes",SVOr.GarantyMes,req);
	addParamToJSONArea("fGarantyToDate",SVOr.GarantyToDate,req);
	addParamToJSONArea("fCallStatus",NormalizeStrToJson(SVOr.CallStatus),req);
	addParamToJSONArea("fRejectReason",NormalizeStrToJson(SVOr.RejectReason),req);
	addParamToJSONArea("fCashSum",SVOr.FastCash,req);
	addParamToJSONArea("fPrepaySum",SVOr.PrepaySum,req);
	addParamToJSONArea("fGarNo",SVOr.GarNo,req);
	addParamToJSONArea("fBatary",NormalizeStrToJson(SVOr.Batary),req);
	addParamToJSONArea("fZaryadka",NormalizeStrToJson(SVOr.Zaryadka),req);
	addParamToJSONArea("fInshe",NormalizeStrToJson(SVOr.Inshe),req);
	addParamToJSONArea("fComment1",NormalizeStrToJson(SVOr.Comment1),req);
	addParamToJSONArea("fComment2",NormalizeStrToJson(SVOr.Comment2),req);
	addParamToJSONArea("fComment3",NormalizeStrToJson(SVOr.Comment3),req);
	addParamToJSONArea("fVlastnik",NormalizeStrToJson(SVOr.Vlastnik),req);
	AddTextToArea("\"Text\":" &  "\"",req);
	for(i=0;i<LineTextCnt(SVOr); i = i+1) begin
		AddTextToArea(NormalizeStrToJson(LineTextGet(SVOr,i)),req);
	end;	
	AddTextToArea("\",",req);
	matrowget(SVOr,0,SVOrw);
	addParamToJSONArea("mArtCode",NormalizeStrToJson(SVOrw.ArtCode),req);
	addParamToJSONArea("mNewSerialNr",SVOrw.NewSerialNr,req);
	addParamToJSONArea("mSpec",NormalizeStrToJson(SVOrw.Spec),req);
	delLastComaInArea(req);
	AddTextToArea("}",req);
 
	
	MySendRawWebRequest(host,3001,-1,true,"POST",page,"text/plain","",false,req,reply,5);
	//if(MySendWebRequest(host,443,-1,true,"POST",page,"application/json","",false,req,reply,5))then begin  //WORK!
	//SendRawWebRequest(host,port,false,"POST","/xccsp","text/xml","",false,req,reply,10)
		//end;
		writeareatofile(req,"ERPJSSentRequest.txt",0);
		writeareatofile(reply,"ERPJSSentReply.txt",0);
return;
end;
