external function LongInt DateDiff(Date,Date);

SetLangMode(LangRussian,"RUS",0);

procedure MySortStringArray(var array string astr,integer cnt)
begin
	integer i,j;
	string 100 tmp1,tmp2;
	
	if(cnt>1)then begin
		for(j=0;j<cnt;j=j+1)begin
			for(i=0;i<cnt-1;i=i+1)begin
				if(uppercase(astr[i])>uppercase(astr[i+1]))then begin
					tmp1 = astr[i];
					tmp2 = astr[i+1];
					astr[i] = tmp2;
					astr[i+1] = tmp1;
				end;
			end;
		end;
	end;
		

return;
end;

procedure MySortLngIntArray(var array longint astr,integer cnt)
begin
	integer i,j;
	string 100 tmp1,tmp2;
	
	if(cnt>1)then begin
		for(j=0;j<cnt;j=j+1)begin
			for(i=0;i<cnt-1;i=i+1)begin
				if(uppercase(astr[i])>uppercase(astr[i+1]))then begin
					tmp1 = astr[i];
					tmp2 = astr[i+1];
					astr[i] = tmp2;
					astr[i+1] = tmp1;
				end;
			end;
		end;
	end;
		

return;
end;


procedure PrintHeader(record RcVc RepSpec)
begin
	
	Header(1,"test0",0);
	Header(1,"test1",1);

	endheader;
return;
end;

global procedure ServiceJobsRn(record RcVc RepSpec)
begin
	record INVc INr;
	record SVOVc SVOr;
	row SVOVc SVOrw;
	record IntSerBalVc SBr;
	vector string 50 vSerLoc,vSerInServ;
	vector boolean vSGExist,vLocExist,vSGLocExist;
	vector longint vSerSVONr;
	array string 50 aSerials,aSerials1;
	integer k,i,mtrw,j,mtrw1;
	record SalesGroupVc SGr;
	record LocationVc Locr;
	array integer tabs;
	boolean testfsg,testfloc,testfsvo;
	val dolg,totdolg,supertotdolg,totserv;
	record IPRsVc IPRsr;
	date sd,ed;
	boolean TrHs,testf,filter,svoout;
	record IVVc IVr,credIVr;
	record IPVc IPr;
	vector val ivsum,svodolg,ivsumserv;
	vector boolean svoexist;
	vector date paydate;
	array longint asvonr;
	row IVVc IVrw;
	row IPVc IPrw;
	string 100 enginer;
	val totrem, totpayrem, totnopayrem, totcan, totourcan, totnopayremqty,totpayremqty;
	
	tabs[0] = 0;
	tabs[1] = 40;
	tabs[2] = 80;
	tabs[3] = 100;
	tabs[4] = 150;
	tabs[5] = 180;
	tabs[6] = 240;
	tabs[7] = 280;
	
	StartReportJob("Выполненые ремонты");
		PrintHeader(RepSpec);
		
		sd = RepSpec.sStartDate;
		ed = RepSpec.sEndDate;

		IPRsr.TransDate = sd;
		TrHs = true;
		while(loopkey("TransDate",IPRsr,1,TrHs))begin
			if(IPRsr.TransDate>ed)then begin TrHs = false; end;

			if(TrHs)then begin
				switch(IPRsr.TransType)begin
					case 0:	IVr.SerNr = IPRsr.TransNr;
									if(readfirstmain(IVr,1,true))then begin
										if(svoexist[IVr.SVONr]==false)then begin
											asvonr[k] = IVr.SVONr;
											k = k+1;
											svoexist[IVr.SVONr] = true;
										end;
										if(IVr.InvType!=kInvoiceTypeCredit)then begin
											if(paydate[IVr.SVONr]<IVr.InvDate)then begin
												paydate[IVr.SVONr] = IVr.InvDate;
											end;
											ivsum[IVr.SVONr] = ivsum[IVr.SVONr] + IVr.Sum4;
											mtrw = matrowcnt(IVr);
											For(i=0;i<mtrw;i=i+1) begin
												matrowget(IVr,i,IVrw);
												if(IVrw.stp==kInvoiceRowTypePrepayment)then begin
													ivsum[IVr.SVONr] = ivsum[IVr.SVONr] - IVrw.Sum;
												end;
											end; 
										end else begin
											ivsum[IVr.SVONr] = ivsum[IVr.SVONr] - IVr.Sum4;
										end;
									end;
					case 1:	IPr.SerNr = IPRsr.TransNr;
									if(readfirstmain(IPr,1,true))then begin
										mtrw = matrowcnt(IPr);
										For(i=0;i<mtrw;i=i+1) begin
	  									matrowget(IPr,i,IPrw);
	  									if(IPrw.InvoiceNr>0 and IPrw.InvoiceNr==IPRsr.IVNr)then begin
	  										IVr.SerNr = IPrw.InvoiceNr;
	  										if(readfirstmain(IVr,1,true))then begin
	  											if(svoexist[IVr.SVONr]==false)then begin
														asvonr[k] = IVr.SVONr;
														k = k+1;
														svoexist[IVr.SVONr] = true;
													end;
													
													if(IVr.InvDate<sd)then begin
														ivsum[IVr.SVONr] = ivsum[IVr.SVONr] + IVr.Sum4;
														mtrw1 = matrowcnt(IVr);
														For(j=0;j<mtrw;j=j+1) begin
															matrowget(IVr,j,IVrw);
															if(IVrw.stp==kInvoiceRowTypePrepayment)then begin
																ivsum[IVr.SVONr] = ivsum[IVr.SVONr] - IVrw.Sum;
															end;
														end;
													end;
													
	  											ivsum[IVr.SVONr] = ivsum[IVr.SVONr] - IPrw.InvVal;
	  											if(paydate[IVr.SVONr]<IPr.TransDate)then begin
														paydate[IVr.SVONr] = IPr.TransDate;
													end;
	  										end;
	  									end;
										end; 
									end;
				end;
			end;
		end;
		
		MySortLngIntArray(asvonr,k);
		
		startformat(15);
			outstring(tabs[0],0,"Заказ",false);
			outstring(tabs[1],0,"Дата",false);
			outstring(tabs[2],0,"Кол-во",false);
			outstring(tabs[3],0,"Выдано за деньги",false);
			outstring(tabs[4],0,"Отказ",false);
			outstring(tabs[5],0,"Отказ по нашей вине",false);
			outstring(tabs[6],0,"Сумма по вып. рем.",false);
			outstring(tabs[7],0,"Мастер",false);
			//outstring(tabs[7],0,SVOr.StatusText,false);
		endformat;
		
		For(i=0;i<k;i=i+1) begin
			SVOr.SerNr = asvonr[i];
			readfirstmain(SVOr,1,true);
			if(SVOr.WSCost!=0 and ivsum[asvonr[i]]<=0)then begin
					
				svoout = false;
				IVr.SVONr = SVOr.SerNr;
				TrHs = true;
				while(loopkey("SVONr",IVr,1,TrHs))begin	
					testf = true;
					if(IVr.SVONr!=SVOr.SerNr)then begin TrHs = false; testf = false; end;
					if(IVr.OKFlag==0)then begin testf = false; end;
					
					if(testf)then begin
						mtrw = matrowcnt(IVr);
						For(j=0;j<mtrw;j=j+1) begin
	  					matrowget(IVr,j,IVrw);
	  					if(IVrw.stp==kInvoiceRowTypeNormal)then begin
	  						if(nonblank(IVrw.ArtCode))then begin
	  							INr.Code = IVrw.ArtCode;
	  							if(readfirstmain(INr,1,true))then begin
	  								if(INr.ItemType==3 or INr.ItemType==0)then begin
	  									filter = true;
	  									enginer = "";
	  									if(IVr.SalesMan==SVOr.CustomField7)then begin
												enginer = SVOr.ServiceManager;
											end else begin
												enginer = IVr.SalesMan;
											end;
	  									
	  									if(nonblank(RepSpec.f1) and RepSpec.f1!=SVOr.SalesGroup)then begin filter = false; end;
											if(nonblank(RepSpec.f3) and RepSpec.f3!=enginer)then begin filter = false; end;
											if(nonblank(RepSpec.f4) and RepSpec.f4!=SVOr.CustomField7)then begin filter = false; end;
	  									
	  									if(filter)then begin
	  										svoout = true;
												startformat(15);
													outstring(tabs[2],0,IVrw.Spec,false);
													outstring(tabs[6],0,IVrw.Sum,false);
													if(IVr.SalesMan==SVOr.CustomField7)then begin
														outstring(tabs[7],0,SVOr.ServiceManager,false);
													end else begin
														outstring(tabs[7],0,IVr.SalesMan,false);
													end;
												endformat;
												ivsumserv[asvonr[i]] = ivsumserv[asvonr[i]] + IVrw.Sum;
												totserv = totserv + ivsumserv[asvonr[i]];
	  									end;
	  									
	  								end;
	  							end;
	  						end;
	  					end;
						end; 
					end;
				end;
				
				if(svoout)then begin
					totpayremqty = totpayremqty + 1;
					totrem = totrem + 1;
					startformat(15);
						outstring(tabs[0],"DblSVOVcSer",SVOr.InnerOrderNr,false);
						outstring(tabs[1],0,SVOr.TransDate,false);
						outstring(tabs[2],0,1,false);
						outstring(tabs[3],0,1,false);
						outstring(tabs[4],0,blankval,false);
						outstring(tabs[5],0,blankval,false);
						//outstring(tabs[6],0,SVOr.WSCost,false);
					endformat;
					supertotdolg = supertotdolg + SVOr.WSCost;
					black_divider(tabs[6],tabs[7]);
					startformat(15);
						outstring(tabs[0],0,"Итого по заказу",false);
						outstring(tabs[6],0,SVOr.WSCost,false);
					endformat;
					gray_divider(0,1);
				end;			
				resetloop(IVr);
			end;
		end; 
		black_divider(0,1);
		startformat(15);
			outstring(0,0,"Итого по  завершенным ремонтам",false);
			outstring(400,0,supertotdolg,false);
		endformat;
		totpayrem = supertotdolg;
		
		supertotdolg = blankval;
		black_divider(0,1);
		startformat(15);
			outstring(0,0,"Неоплаченные заказы ",false);
			outstring(400,0,supertotdolg,false);
		endformat;
		For(i=0;i<k;i=i+1) begin
			SVOr.SerNr = asvonr[i];
			readfirstmain(SVOr,1,true);
			if(SVOr.WSCost!=0 and ivsum[asvonr[i]]>0)then begin
				
				
				svoout = false;
				IVr.SVONr = SVOr.SerNr;
				TrHs = true;
				while(loopkey("SVONr",IVr,1,TrHs))begin	
					testf = true;
					if(IVr.SVONr!=SVOr.SerNr)then begin TrHs = false; testf = false; end;
					if(IVr.OKFlag==0)then begin testf = false; end;
					
					if(testf)then begin
						mtrw = matrowcnt(IVr);
						For(j=0;j<mtrw;j=j+1) begin
	  					matrowget(IVr,j,IVrw);
	  					if(IVrw.stp==kInvoiceRowTypeNormal)then begin
	  						if(nonblank(IVrw.ArtCode))then begin
	  							INr.Code = IVrw.ArtCode;
	  							if(readfirstmain(INr,1,true))then begin
	  								if(INr.ItemType==3 or INr.ItemType==0)then begin
	  									filter = true;
	  									enginer = "";
	  									if(IVr.SalesMan==SVOr.CustomField7)then begin
												enginer = SVOr.ServiceManager;
											end else begin
												enginer = IVr.SalesMan;
											end;
	  									
	  									if(nonblank(RepSpec.f1) and RepSpec.f1!=SVOr.SalesGroup)then begin filter = false; end;
											if(nonblank(RepSpec.f3) and RepSpec.f3!=enginer)then begin filter = false; end;
											if(nonblank(RepSpec.f4) and RepSpec.f4!=SVOr.CustomField7)then begin filter = false; end;
	  									
	  									if(filter)then begin
	  										svoout = true;
												startformat(15);
													outstring(tabs[2],0,IVrw.Spec,false);
													outstring(tabs[6],0,IVrw.Sum,false);
													if(IVr.SalesMan==SVOr.CustomField7)then begin
														outstring(tabs[7],0,SVOr.ServiceManager,false);
													end else begin
														outstring(tabs[7],0,IVr.SalesMan,false);
													end;
												endformat;
												ivsumserv[asvonr[i]] = ivsumserv[asvonr[i]] + IVrw.Sum;
												totserv = totserv + ivsumserv[asvonr[i]];
	  									end;
	  									
	  								end;
	  							end;
	  						end;
	  					end;
						end; 
					end;
				end;
				
				if(svoout)then begin
					totnopayremqty = totnopayremqty + 1;
					totrem = totrem + 1;
					startformat(15);
						outstring(tabs[0],"DblSVOVcSer",SVOr.InnerOrderNr,false);
						outstring(tabs[1],0,SVOr.TransDate,false);
						outstring(tabs[2],0,1,false);
						outstring(tabs[3],0,1,false);
						outstring(tabs[4],0,blankval,false);
						outstring(tabs[5],0,blankval,false);
						//outstring(tabs[6],0,SVOr.WSCost,false);
					endformat;
					supertotdolg = supertotdolg + SVOr.WSCost;
					black_divider(tabs[6],tabs[7]);
					startformat(15);
						outstring(tabs[0],0,"Итого по заказу",false);
						outstring(tabs[6],0,SVOr.WSCost,false);
					endformat;
					gray_divider(0,1);
				end;			
				resetloop(IVr);
			end;
		end; 
		black_divider(0,1);
		startformat(15);
			outstring(0,0,"Итого по НЕ завершенным ремонтам",false);

			outstring(400,0,supertotdolg,false);
		endformat;
		
		
		
		black_divider(0,1);
		startformat(15);
			outstring(3,0,"Отмененные ремонты",false);

		endformat;
		resetloop(SVOr);
		SVOr.RegDate = sd;
		TrHs = true;
		while(loopkey("RegDate",SVOr,1,TrHs))begin
			testf = true;
			if(SVOr.RegDate<sd or SVOr.RegDate>ed)then begin TrHs = false; testf = false; end;
			
			if(nonblank(RepSpec.f1) and RepSpec.f1!=SVOr.SalesGroup)then begin testf = false; end;
			if(nonblank(RepSpec.f3) and RepSpec.f3!=SVOr.ServiceManager)then begin testf = false; end;
			if(nonblank(RepSpec.f4) and RepSpec.f4!=SVOr.CustomField7)then begin testf = false; end;
			
			if(testf)then begin
				if(SVOr.OrderStatus==6)then begin
					totcan = totcan + 1;
					startformat(15);
					outstring(tabs[0],"DblSVOVcSer",SVOr.InnerOrderNr,false);
					outstring(tabs[1],0,SVOr.TransDate,false);
					outstring(tabs[2],0,1,false);
					outstring(tabs[3],0,blankval,false);
					outstring(tabs[4],0,1,false);
					if(SVOr.RejectReason=="Не смог сделать")then begin
						totourcan = totourcan + 1;
						outstring(tabs[5],0,1,false);
					end else begin
						outstring(tabs[5],0,blankval,false);
					end;
					outstring(tabs[6],0,ivsum[asvonr[i]],false);
					outstring(tabs[7],0,SVOr.RejectReason,false);
				endformat;
				end;
			end;
		end;
		
		startformat(15);
			outstring(tabs[0],0,"Всего ремонтов",false);
			outstring(tabs[3],0,totrem,false);
		endformat;
		startformat(15);
			outstring(tabs[0],0,"Всего оплаченных ремонтов",false);
			outstring(tabs[3],0,totpayremqty,false);
		endformat;
		startformat(15);
			outstring(tabs[0],0,"На сумму",false);
			outstring(tabs[3],0,totpayrem,false);
		endformat;
		startformat(15);
			outstring(tabs[0],0,"Неоплаченных ремонтов",false);
			outstring(tabs[3],0,totnopayremqty,false);
		endformat;
		startformat(15);
			outstring(tabs[0],0,"На сумму",false);
			outstring(tabs[3],0,supertotdolg,false);
		endformat;
		startformat(15);
			outstring(tabs[0],0,"Отмен",false);
			outstring(tabs[3],0,totcan,false);
		endformat;
		startformat(15);
			outstring(tabs[0],0,"Отмен по нашей вине",false);
			outstring(tabs[3],0,totourcan,false);
		endformat;	
		
	endjob;

return;
end;