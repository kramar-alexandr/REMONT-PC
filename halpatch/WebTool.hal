external function date CalcWorkDate(date,integer,boolean);
external procedure OutDaysInStatus(vector val,longint ,string ,string ,var vector integer ,var vector integer);
external procedure FindPhoneDomain(record RcVc,string ,string, var vector boolean ,var vector string ,var vector string ,var vector string ,var vector string);
external procedure MySortLngIntArray(var array longint ,integer );
external function LongInt DateDiff(Date,Date);
external function LongInt CountWorkingDays(Date,Date,string,string);
external procedure MySortStringArray(var array string ,integer );
external procedure ExtractObj(string,var Integer,var string);
external procedure ServiceJobsRnStat(record RcVc,var integer,var integer,var vector val,var vector val,var array string,var array string);

SetLangMode(LangRussian,"RUS",0);

Global webpublic procedure WebGetSVOStatus()
begin
	string 50 sernr,phone;
	record SVOVc  SVOr;
	boolean TrHs,testf;
  record IVVc IVr;
  row IVVc IVrw;
  integer mtrw,i;

  record INVc INr;
  vector val artCodeQty;
  vector string 255 artCodeCode,artCodeName;
  vector val artSpecQty;
  val tQty;
  array string 255 atags;
	
	sernr = webgetarg("sernr");
	phone = webgetarg("phone");
	
	logtext(0,"WebGetSVOStatus " & sernr & " " & phone);
	
	//WeboutString("Не верный номер ремонта");
	
	SVOr.SerNr = stringtolongint(sernr);
	if(readfirstmain(SVOr,1,true))then begin
		if(SVOr.Kontinfo1==phone)then begin
			if (blankdate(SVOr.RegDate) or SVOr.DoneMark==0) then begin
          switch(SVOr.OrderStatus)begin
            case 0:WeboutString("Ваш пристрій знаходиться НА ДІАГНОСТИЦІ. Орієнтовна дата завершення діагностики: " & CalcWorkDate(SVOr.GetItemDate,3,true));//В ожидании
            case 1:WeboutString("Ваш пристрій знаходится В РЕМОНТІ. Наш менеджер зателефонує Вам, коли пристрій буде готовий.");//В ремонте
            case 2:WeboutString("РЕМОНТ Вашего пристрою ЗАВЕРШЕНО. Наш менеджер зателефонує Вам, як тільки апарат буде доставлено в пункт видачі");//Готов
            case 3:WeboutString("Ваше пристрій знаходиться в статусі \"ОЧІКУВАННЯ ДЕТАЛІ\". Наш спеціаліст приступить до виконання ремонту, як тільки деталь будет доставлено");//Ожидает запч.
            case 4:WeboutString("ДІАГНОСТИКУ Вашего пристрою ЗАВЕРШЕНО. Найближчим часом Вам зателефонує наш менеджер і повідомить несправніть та вартість ремонту.");//На согласовании
            case 5:WeboutString("Ваш пристрій знаходиться НА ДІАГНОСТИЦІ. Орієнтовна дата завершення діагностики: " & CalcWorkDate(SVOr.GetItemDate,3,true));//На диагностике
            case 6:WeboutString("Ваш пристрій буде выдано БЕЗ РЕМОНТУ. Наш менеджер зателефонує Вам, як тільки апарат буде доставлено в пункт видачі");//Отказ
            case 7:WeboutString("Ваш пристрій знаходится В РЕМОНТІ. Наш менеджер зателефонує Вам, коли пристрій буде готовий.");//Согласовано
            case 8:WeboutString("Ваш пристрій знаходится В РЕМОНТІ. Наш менеджер зателефонує Вам, коли пристрій буде готовий.");//В удал. сервисе
            case 9:WeboutString("");//Предварит
            case 10:WeboutString("Ваше пристрій знаходиться в статусі \"ОЧІКУВАННЯ ДЕТАЛІ\". Наш спеціаліст приступить до виконання ремонту, як тільки деталь будет доставлено");//Заказать запч.
            case 11:WeboutString("Здається, щось пішло не так... Ваш пристрій відправлено НА ДООПРАЦЮВАННЯ. Наш менеджер зателефонує Вам, коли пристрій буде готовий.");//Вернули на дораб.
            case 12:WeboutString("ДІАГНОСТИКУ Вашего пристрою ЗАВЕРШЕНО, про результат сповіщено. Інженер почне ремонт після Вашего підтверждення");//Клиент думает
          end;
          if (nonblankdate(SVOr.FinishDate)) then begin // Edit ************** 30 January 2018 12:04
            WebOutString("<br>");
            WebOutString("Ваш пристрій орієнтовно буде готовий ");
            WebOutString(DateToString(SVOr.FinishDate, "DD.MM.YYYY"));
          end;
          if (SVOr.OrderStatus==2) then begin
              IVr.SVONr = SVOr.SerNr;
              TrHS = true;
              while(loopkey("SVONr",IVr,1,TrHs)) begin
                  testf = true;
                  if(IVr.SVONr!=SVOr.SerNr)then begin
                    testf = false;
                    TrHs = false;
                  end;
                  if(IVr.OKFlag==0)then begin
                    testf = false;
                  end;
                  if(testf)then begin
                    mtrw = matrowcnt(IVr);
                    for (i=0;i<mtrw;i=i+1) begin
                      matrowget(IVr,i,IVrw);
                      if (IVrw.stp==kInvoiceRowTypeNormal) then begin
                        tQty = IVrw.Quant;
                        if (IVr.InvType==kInvoiceTypeCredit or IVr.InvType==kInvoiceTypeCreditSpecialSales) then begin //8
                          tQty = -tQty;
                        end;
                        if (nonblank(IVrw.ArtCode)) then begin
                          artCodeQty[IVrw.ArtCode & IVrw.Spec] = artCodeQty[IVrw.ArtCode & IVrw.Spec] + tQty;
                          artCodeCode[IVrw.ArtCode & IVrw.Spec] = IVrw.ArtCode;
                          artCodeName[IVrw.ArtCode & IVrw.Spec] = IVrw.Spec;
                        end else begin
                          artSpecQty[IVrw.Spec] = artSpecQty[IVrw.Spec] + tQty;
                        end;
                      end;
                    end;
                  end;
              end;
              GetVectorTags(artCodeQty,atags);
              if(atags.length>0)then begin
								WebOutString("<br>");
								WebOutString("Виконані роботи:");
							end;
              for (i=0;i<atags.length;i=i+1) begin
                if (artCodeQty[atags[i]]>0) then begin
                 	INr.Code = artCodeCode[atags[i]];
                  if(readfirstmain(INr,1,true)) begin
                    if(INr.ItemType==3 or INr.ItemType==0)then begin
                      WebOutString("<br>");
                      WebOutString(" - " & artCodeName[atags[i]]);
                    end;
                  end;
                end;
              end;
          end;
      end;
    end else begin //1
          WeboutString("При введенні номеру телефона було допущено помилку. Введіть, будь-ласка, телефон в форматі: 098ХХХХХХХ");
    end;

	end else begin
		SVOr.InnerOrderNr = sernr;
		if(readfirstkey("InnerOrderNr",SVOr,1,true))then begin
			if(SVOr.Kontinfo1==phone)then begin
				
				//WeboutString(SVOr.StatusText);
			 if (blankdate(SVOr.RegDate) or SVOr.DoneMark==0) then begin
          switch(SVOr.OrderStatus)begin
            case 0:WeboutString("Ваш пристрій знаходиться НА ДІАГНОСТИЦІ. Орієнтовна дата завершення діагностики: " & CalcWorkDate(SVOr.GetItemDate,3,true));//В ожидании
            case 1:WeboutString("Ваш пристрій знаходится В РЕМОНТІ. Наш менеджер зателефонує Вам, коли пристрій буде готовий.");//В ремонте
            case 2:WeboutString("РЕМОНТ Вашего пристрою ЗАВЕРШЕНО. Наш менеджер зателефонує Вам, як тільки апарат буде доставлено в пункт видачі");//Готов
            case 3:WeboutString("Ваше пристрій знаходиться в статусі \"ОЧІКУВАННЯ ДЕТАЛІ\". Наш спеціаліст приступить до виконання ремонту, як тільки деталь будет доставлено");//Ожидает запч.
            case 4:WeboutString("ДІАГНОСТИКУ Вашего пристрою ЗАВЕРШЕНО. Найближчим часом Вам зателефонує наш менеджер і повідомить несправніть та вартість ремонту.");//На согласовании
            case 5:WeboutString("Ваш пристрій знаходиться НА ДІАГНОСТИЦІ. Орієнтовна дата завершення діагностики: " & CalcWorkDate(SVOr.GetItemDate,3,true));//На диагностике
            case 6:WeboutString("Ваш пристрій буде выдано БЕЗ РЕМОНТУ. Наш менеджер зателефонує Вам, як тільки апарат буде доставлено в пункт видачі");//Отказ
            case 7:WeboutString("Ваш пристрій знаходится В РЕМОНТІ. Наш менеджер зателефонує Вам, коли пристрій буде готовий.");//Согласовано
            case 8:WeboutString("Ваш пристрій знаходится В РЕМОНТІ. Наш менеджер зателефонує Вам, коли пристрій буде готовий.");//В удал. сервисе
            case 9:WeboutString("");//Предварит
            case 10:WeboutString("Ваше пристрій знаходиться в статусі \"ОЧІКУВАННЯ ДЕТАЛІ\". Наш спеціаліст приступить до виконання ремонту, як тільки деталь будет доставлено");//Заказать запч.
            case 11:WeboutString("Здається, щось пішло не так... Ваш пристрій відправлено НА ДООПРАЦЮВАННЯ. Наш менеджер зателефонує Вам, коли пристрій буде готовий.");//Вернули на дораб.
            case 12:WeboutString("ДІАГНОСТИКУ Вашего пристрою ЗАВЕРШЕНО, про результат сповіщено. Інженер почне ремонт після Вашего підтверждення");//Клиент думает
          end;
				end;
				if (nonblankdate(SVOr.FinishDate)) then begin // Edit ************** 30 January 2018 12:04
					WebOutString("<br>");
					WebOutString("Ваш пристрій орієнтовно буде готовий ");
					WebOutString(DateToString(SVOr.FinishDate, "DD.MM.YYYY"));
				end;
				if (SVOr.OrderStatus==2) then begin
						IVr.SVONr = SVOr.SerNr;
						TrHS = true;
						while(loopkey("SVONr",IVr,1,TrHs)) begin
								testf = true;
								if(IVr.SVONr!=SVOr.SerNr)then begin
									testf = false;
									TrHs = false;
								end;
								if(IVr.OKFlag==0)then begin
									testf = false;
								end;
								if(testf)then begin
									mtrw = matrowcnt(IVr);
									for (i=0;i<mtrw;i=i+1) begin
										matrowget(IVr,i,IVrw);
										if (IVrw.stp==kInvoiceRowTypeNormal) then begin
											tQty = IVrw.Quant;
											if (IVr.InvType==kInvoiceTypeCredit or IVr.InvType==kInvoiceTypeCreditSpecialSales) then begin //8
												tQty = -tQty;
											end;
											if (nonblank(IVrw.ArtCode)) then begin
												artCodeQty[IVrw.ArtCode & IVrw.Spec] = artCodeQty[IVrw.ArtCode & IVrw.Spec] + tQty;
												artCodeCode[IVrw.ArtCode & IVrw.Spec] = IVrw.ArtCode;
												artCodeName[IVrw.ArtCode & IVrw.Spec] = IVrw.Spec;
											end else begin
												artSpecQty[IVrw.Spec] = artSpecQty[IVrw.Spec] + tQty;
											end;
										end;
									end;
								end;
						end;
						GetVectorTags(artCodeQty,atags);
						if(atags.length>0)then begin
							WebOutString("<br>");
							WebOutString("Виконані роботи:");
						end;
						for (i=0;i<atags.length;i=i+1) begin
							if (artCodeQty[atags[i]]>0) then begin
								INr.Code = artCodeCode[atags[i]];
								if(readfirstmain(INr,1,true)) begin
									if(INr.ItemType==3 or INr.ItemType==0)then begin
										WebOutString("<br>");
										WebOutString(" - " & artCodeName[atags[i]]);
									end;
								end;
							end;
						end;
				end;
				
				
				
			end else begin
				WeboutString("При введенні номеру телефона було допущено помилку. Введіть, будь-ласка, телефон в форматі: 098ХХХХХХХ");
			end;
		end else begin		
			WeboutString("При введенні номеру замовлення було допущено помилку. Введіть, будь-ласка, номер в форматі Р38-1234");
		end;
	end;
return;
end;

global function val CountSum(record RcVc RepSpec)
begin
	record INVc INr;
	record SVOVc SVOr,oldSVOr;
	row SVOVc SVOrw;
	record IntSerBalVc SBr;
	array string 50 users;
	integer k,i,mtrw,j,mtrw1;
	boolean testfsg,testfloc,testfsvo;
	val dolg,totdolg,supertotdolg,totserv;
	val dolgdet,totdolgdet,supertotdolgdet,totservdet;
	record IPRsVc IPRsr;
	date sd,ed;
	boolean TrHs,testf,filter,svoout,TrHsph;
	record IVVc IVr;
	record IPVc IPr;
	vector val ivsum,svodolg,ivsumserv,ivsumdet,svodolgdet,ivsumservdet,ivretsum;
	vector boolean svoexist;
	vector date paydate;
	array longint asvonr;
	row IVVc IVrw,IV2rw;
	row IPVc IPrw,IP2rw;
	string 100 enginer,tphone,tstr,akey;
	val totrem, totpayrem, totnopayrem, totcan, totourcan, totnopayremqty,totpayremqty,totcanceled,totpayremdet,totalcanceled;
	val totdolgqty,totdolgsum,povtorsum,povtorsumdolg,povtorsumotkaz,povtorsumneoplat,totdolgsumdet;
	record WSVc WSr;
	record RLinkVc RLr;
	integer cnt,mtrw2;
	vector string 100 vCuDomain,vUTMSource,vUTMCampaign,vUTMTerm;
	boolean TrHs2,testf2;
	vector val vTrackSum;
	vector boolean vTrackFlag,vPovtor;
	array string 255 TrackSumKey;
	integer TrackCnt,povtorqty,povtorqtydolg,povtorqtyotkaz,povtorqtyneoplat;
	vector val vIngSum;
	vector val vManSum;
	vector integer vIngCanQty,vManCanQty,vSVOQty;
	array string 50 aing,aman,arjct;
	integer ingcnt,mancnt,irjct,userscnt,ui;
	vector boolean vIngExst,vManExst,vrjct; 
	record UserVc User;
	vector val ivretsummanag;
	val	ret;
	
	while(loopmain(User,1,true))begin
		users[userscnt] = User.Code;
		userscnt = userscnt + 1;
	end;
	
	if(usercanaction("ServiceJobsGroupAcces",false)==false)then begin
		User.Code = currentuser;
		if(readfirstmain(User,1,true))then begin
			if(nonblank(User.SalesGroup))then begin
				RepSpec.f1 = User.SalesGroup;
			end;
		end;
	end;
		
		sd = RepSpec.sStartDate;
		ed = RepSpec.sEndDate;

		IPRsr.TransDate = sd;
		TrHs = true;
		while(loopkey("TransDate",IPRsr,1,TrHs))begin
			if(IPRsr.TransDate>ed)then begin TrHs = false; end;

			if(TrHs)then begin
				switch(IPRsr.TransType)begin
					case 0:	IVr.SerNr = IPRsr.TransNr;
									if(readfirstmain(IVr,1,true))then begin
										if(svoexist[IVr.SVONr]==false)then begin
											asvonr[k] = IVr.SVONr;
											k = k+1;
											svoexist[IVr.SVONr] = true;
										end;
										if(IVr.InvType!=kInvoiceTypeCredit)then begin
											if(paydate[IVr.SVONr]<IVr.InvDate)then begin
												paydate[IVr.SVONr] = IVr.InvDate;
											end;
											ivsum[IVr.SVONr] = ivsum[IVr.SVONr] + IVr.Sum4;
											mtrw = matrowcnt(IVr);
											For(i=0;i<mtrw;i=i+1) begin
												matrowget(IVr,i,IVrw);
												if(IVrw.stp==kInvoiceRowTypePrepayment)then begin
													ivsum[IVr.SVONr] = ivsum[IVr.SVONr] - IVrw.Sum;
												end;
											end; 
										end else begin
											ivsum[IVr.SVONr] = ivsum[IVr.SVONr] - IVr.Sum4;
										end;
									end;
					case 1:	IPr.SerNr = IPRsr.TransNr;
									if(readfirstmain(IPr,1,true))then begin
										mtrw = matrowcnt(IPr);
										For(i=0;i<mtrw;i=i+1) begin
	  									matrowget(IPr,i,IPrw);
	  									if(IPrw.CUPNr>0)then begin
	  										if(IPrw.RecVal<0)then begin
	  											if(svoexist[IPrw.CUPNr]==false)then begin
														asvonr[k] = IPrw.CUPNr;
														k = k+1;
														svoexist[IPrw.CUPNr] = true;
													end;
													
													SVOr.SerNr = IPrw.CUPNr;
													if(readfirstmain(SVOr,1,true))then begin
														filter = true;
														if(IVr.SalesMan==SVOr.CustomField7)then begin
															enginer = SVOr.ServiceManager;
														end;
					
														if(nonblank(RepSpec.f1) and RepSpec.f1!=SVOr.SalesGroup)then begin filter = false; end;
														if(nonblank(RepSpec.f3) and RepSpec.f3!=enginer)then begin filter = false; end;
														if(nonblank(RepSpec.f4) and RepSpec.f4!=SVOr.CustomField7)then begin filter = false; end;
														
														if(filter)then begin
															ivretsum[IPrw.CUPNr] = ivretsum[IPrw.CUPNr] - IPrw.RecVal;
															if(nonblank(SVOr.ServiceManager))then begin
																ivretsummanag[IPrw.CUPNr & ":" & SVOr.ServiceManager] = ivretsum[IPrw.CUPNr & ":" & SVOr.ServiceManager] - IPrw.RecVal;
																vIngSum[SVOr.ServiceManager & ":VOZVR:SERV"] = vIngSum[SVOr.ServiceManager & ":VOZVR:SERV"] - IPrw.RecVal;
															end else begin
																ivretsummanag[IPrw.CUPNr & ":PREPAY"] = ivretsum[IPrw.CUPNr & ":PREPAY"] - IPrw.RecVal;
																vIngSum["PREPAY:VOZVR:SERV"] = vIngSum["PREPAY:VOZVR:SERV"] - IPrw.RecVal;
																if(vManExst["PREPAY"]==false)then begin
																	vManExst["PREPAY"] = true;
																	aman[mancnt] = "PREPAY";
																	mancnt = mancnt + 1;														
																end;
															end;
															vManSum[SVOr.Inspector & ":VOZVR:SERV"] = vManSum[SVOr.Inspector & ":VOZVR:SERV"] - IPrw.RecVal;
															if(vManExst[SVOr.Inspector]==false)then begin
																vManExst[SVOr.Inspector] = true;
																aman[mancnt] = SVOr.Inspector;
																mancnt = mancnt + 1;														
															end;
														end;
													end;
													
												end;
	  									end;
	  									if(IPrw.InvoiceNr>0 and IPrw.InvoiceNr==IPRsr.IVNr)then begin
	  										IVr.SerNr = IPrw.InvoiceNr;
	  										if(readfirstmain(IVr,1,true))then begin
	  											if(svoexist[IVr.SVONr]==false)then begin
														asvonr[k] = IVr.SVONr;
														k = k+1;
														svoexist[IVr.SVONr] = true;
													end;
													
													
	  											ivsum[IVr.SVONr] = ivsum[IVr.SVONr] - IPrw.InvVal;
	  											if(IPrw.InvVal<0)then begin
	  												
														SVOr.SerNr = IVr.SVONr;
														if(readfirstmain(SVOr,1,true))then begin
															filter = true;
															enginer = "";
															cnt=1;
															while(ReadRecordLink(IVr,cnt,WSr,RLr)) begin
																if(nonblank(WSr.EMCode))then begin
																	If(WSr.EMCode!=IVr.SalesMan) then begin
																		IVr.SalesMan = WSr.EMCode;
																	end; 
																end;
																cnt = cnt+1;
															end;
															if(IVr.SalesMan==SVOr.CustomField7)then begin
																enginer = SVOr.ServiceManager;
															end else begin
																enginer = IVr.SalesMan;
															end;
						
															if(nonblank(RepSpec.f1) and RepSpec.f1!=SVOr.SalesGroup)then begin filter = false; end;
															if(nonblank(RepSpec.f3) and RepSpec.f3!=enginer)then begin filter = false; end;
															if(nonblank(RepSpec.f4) and RepSpec.f4!=SVOr.CustomField7)then begin filter = false; end;
															
															if(filter)then begin
																ivretsum[IVr.SVONr] = ivretsum[IVr.SVONr] - IPrw.InvVal;
																ivretsummanag[IVr.SVONr & ":" & enginer] = ivretsum[IVr.SVONr & ":" & enginer] - IPrw.RecVal;
																if(IPrw.RecVal==-IVr.Sum4)then begin
																	mtrw2 = matrowcnt(IVr);
																	For(j=0;j<mtrw2;j=j+1) begin
	  																matrowget(IVr,j,IVrw);
	  																if(IVrw.stp==kInvoiceRowTypeNormal)then begin
	  																	if(nonblank(IVrw.ArtCode))then begin
																				INr.Code = IVrw.ArtCode;
																				if(readfirstmain(INr,1,true))then begin																				
																					if(INr.ItemType==3 or INr.ItemType==0)then begin
																						vIngSum[enginer & ":VOZVR:SERV"] = vIngSum[enginer & ":VOZVR:SERV"] + IVrw.Sum;
																						vManSum[SVOr.Inspector & ":VOZVR:SERV"] = vManSum[SVOr.Inspector & ":VOZVR:SERV"] + IVrw.Sum;
																						if(vManExst[SVOr.Inspector]==false)then begin
																							vManExst[SVOr.Inspector] = true;
																							aman[mancnt] = SVOr.Inspector;
																							mancnt = mancnt + 1;														
																						end;
																					end else begin
																						vIngSum[enginer & ":VOZVR:DET"] = vIngSum[enginer & ":VOZVR:DET"] + IVrw.Sum;
																						vManSum[SVOr.Inspector & ":VOZVR:DET"] = vManSum[SVOr.Inspector & ":VOZVR:DET"] + IVrw.Sum;
																						if(vManExst[SVOr.Inspector]==false)then begin
																							vManExst[SVOr.Inspector] = true;
																							aman[mancnt] = SVOr.Inspector;
																							mancnt = mancnt + 1;														
																						end;
																					end;
																				end;
																			end;
	  																end;
																	end; 
																	
																end else begin
																	vIngSum[enginer & ":VOZVR:SERV"] = vIngSum[enginer & ":VOZVR:SERV"] - IPrw.RecVal;
																	vManSum[SVOr.Inspector & ":VOZVR:SERV"] = vManSum[SVOr.Inspector & ":VOZVR:SERV"] - IPrw.RecVal;
																	if(vManExst[SVOr.Inspector]==false)then begin
																		vManExst[SVOr.Inspector] = true;
																		aman[mancnt] = SVOr.Inspector;
																		mancnt = mancnt + 1;														
																	end;
																end;
															end;
														end;
	  											end;
	  											if(paydate[IVr.SVONr]<IPr.TransDate)then begin
														paydate[IVr.SVONr] = IPr.TransDate;
													end;
	  										end;
	  									end;
										end; 
									end;
				end;
			end;
		end;
		
		MySortLngIntArray(asvonr,k);
		
		For(i=0;i<k;i=i+1) begin
			SVOr.SerNr = asvonr[i];
			readfirstmain(SVOr,1,true);
			if(SVOr.WSCost!=0 and ivsum[asvonr[i]]<=0)then begin
					
				svoout = false;
				IVr.SVONr = SVOr.SerNr;
				TrHs = true;
				while(loopkey("SVONr",IVr,1,TrHs))begin	
					testf = true;
					if(IVr.SVONr!=SVOr.SerNr)then begin TrHs = false; testf = false; end;
					if(IVr.OKFlag==0)then begin testf = false; end;
					
					filter = true;
					if(testf)then begin
						enginer = "";
						cnt=1;
						while(ReadRecordLink(IVr,cnt,WSr,RLr)) begin
							if(nonblank(WSr.EMCode))then begin
								If(WSr.EMCode!=IVr.SalesMan) then begin
									IVr.SalesMan = WSr.EMCode;
								end; 
							end;
							cnt = cnt+1;
						end;
						
						if(IVr.SalesMan==SVOr.CustomField7)then begin
							enginer = SVOr.ServiceManager;
						end else begin
							enginer = IVr.SalesMan;
						end;
						
						if(nonblank(RepSpec.f1) and RepSpec.f1!=SVOr.SalesGroup)then begin filter = false; end;
						if(nonblank(RepSpec.f3) and RepSpec.f3!=enginer)then begin filter = false; end;
						if(nonblank(RepSpec.f4) and RepSpec.f4!=SVOr.CustomField7)then begin filter = false; end;
						testf = filter;
						
						
						
					end;
					
					if(testf)then begin
						mtrw = matrowcnt(IVr);
						For(j=0;j<mtrw;j=j+1) begin
	  					matrowget(IVr,j,IVrw);
	  					if(IVrw.stp==kInvoiceRowTypeNormal)then begin
	  						if(nonblank(IVrw.ArtCode))then begin
	  							INr.Code = IVrw.ArtCode;
	  							if(readfirstmain(INr,1,true))then begin
	  								svoout = true;
											if(IVr.InvType!=kInvoiceTypeCredit)then begin
											end else begin
											end;
											if(IVr.SalesMan==SVOr.CustomField7)then begin
												enginer = SVOr.ServiceManager;
											end else begin
												enginer = IVr.SalesMan;
											end;													
	  								if(INr.ItemType==3 or INr.ItemType==0)then begin  									
	  									if(filter)then begin
	  										
												if(IVr.InvType!=kInvoiceTypeCredit)then begin
													ivsumserv[asvonr[i]] = ivsumserv[asvonr[i]] + IVrw.Sum;
													totserv = totserv + ivsumserv[asvonr[i]];
													supertotdolg = supertotdolg + IVrw.Sum;
													akey = enginer & ":GOTOV:SERV";
													vIngSum[akey] = vIngSum[akey] + IVrw.Sum;
													if(vIngExst[enginer]==false)then begin
														vIngExst[enginer] = true;
														aing[ingcnt] = enginer;
														ingcnt = ingcnt + 1;														
													end;
													akey = SVOr.Inspector & ":GOTOV:SERV";
													vManSum[akey] = vManSum[akey] + IVrw.Sum;
													if(vManExst[SVOr.Inspector]==false)then begin
														vManExst[SVOr.Inspector] = true;
														aman[mancnt] = SVOr.Inspector;
														mancnt = mancnt + 1;														
													end;
													
												end else begin
													ivsumserv[asvonr[i]] = ivsumserv[asvonr[i]] - IVrw.Sum;
													totserv = totserv - ivsumserv[asvonr[i]];
													supertotdolg = supertotdolg - IVrw.Sum;
													akey = enginer & ":GOTOV:SERV";
													vIngSum[akey] = vIngSum[akey] - IVrw.Sum;
													if(vIngExst[enginer]==false)then begin
														vIngExst[enginer] = true;
														aing[ingcnt] = enginer;
														ingcnt = ingcnt + 1;														
													end;
													akey = SVOr.Inspector & ":GOTOV:SERV";
													vManSum[akey] = vManSum[akey] - IVrw.Sum;
													if(vManExst[SVOr.Inspector]==false)then begin
														vManExst[SVOr.Inspector] = true;
														aman[mancnt] = SVOr.Inspector;
														mancnt = mancnt + 1;														
													end;
												end;
	  									end;
	  								end;
	  								if(INr.ItemType==1)then begin  									
	  									if(filter)then begin
												if(IVr.InvType!=kInvoiceTypeCredit)then begin
													ivsumservdet[asvonr[i]] = ivsumservdet[asvonr[i]] + IVrw.Sum;
													totservdet = totservdet + ivsumservdet[asvonr[i]];
													supertotdolgdet = supertotdolgdet + IVrw.Sum;
													akey = enginer & ":GOTOV:DET";
													vIngSum[akey] = vIngSum[akey] + IVrw.Sum;
													if(vIngExst[enginer]==false)then begin
														vIngExst[enginer] = true;
														aing[ingcnt] = enginer;
														ingcnt = ingcnt + 1;														
													end;
													akey = SVOr.Inspector & ":GOTOV:DET";
													vManSum[akey] = vManSum[akey] + IVrw.Sum;
													if(vManExst[SVOr.Inspector]==false)then begin
														vManExst[SVOr.Inspector] = true;
														aman[mancnt] = SVOr.Inspector;
														mancnt = mancnt + 1;														
													end;
												end else begin
													ivsumservdet[asvonr[i]] = ivsumservdet[asvonr[i]] - IVrw.Sum;
													totservdet = totservdet - ivsumservdet[asvonr[i]];
													supertotdolgdet = supertotdolgdet - IVrw.Sum;
													akey = enginer & ":GOTOV:DET";
													vIngSum[akey] = vIngSum[akey] - IVrw.Sum;
													if(vIngExst[enginer]==false)then begin
														vIngExst[enginer] = true;
														aing[ingcnt] = enginer;
														ingcnt = ingcnt + 1;														
													end;
													akey = SVOr.Inspector & ":GOTOV:DET";
													vManSum[akey] = vManSum[akey] - IVrw.Sum;
													if(vManExst[SVOr.Inspector]==false)then begin
														vManExst[SVOr.Inspector] = true;
														aman[mancnt] = SVOr.Inspector;
														mancnt = mancnt + 1;														
													end;
												end;
	  									end;
	  								end;
	  							end;
	  						end;
	  					end;
						end; 
					end;
				end;
				
				if(svoout)then begin
					totpayremqty = totpayremqty + 1;
					totrem = totrem + 1;
					
					if(SVOr.StatusReturnCnt>0)then begin
						vManCanQty[SVOr.Inspector & "DOR"] = vManCanQty[SVOr.Inspector & "DOR"] + SVOr.StatusReturnCnt;
						vIngCanQty[SVOr.ServiceManager & "DOR"] = vIngCanQty[SVOr.ServiceManager & "DOR"] + SVOr.StatusReturnCnt;
					end;
															
					
					
					if(nonblank(SVOr.GarNo))then begin
						oldSVOr.InnerOrderNr = SVOr.GarNo;
						if(readfirstkey("InnerOrderNr",oldSVOr,1,true))then begin
							povtorsum = povtorsum + ivsumserv[asvonr[i]];
							povtorqty = povtorqty + 1;						
							vPovtor[SVOr.SerNr] = true;
						end;
					end;
					
					if(nonblank(vCuDomain[SVOr.CustCode]))then begin
						tstr = "Оплаченные:" & vUTMSource[SVOr.CustCode] & "->" & vCuDomain[SVOr.CustCode] & "("  & vUTMCampaign[SVOr.CustCode] & "|" & vUTMTerm[SVOr.CustCode] & ")";
						if(vTrackFlag[tstr])then begin
							vTrackSum[tstr] = vTrackSum[tstr] + ivsumserv[asvonr[i]];
						end else begin
							vTrackFlag[tstr] = true;
							vTrackSum[tstr] = ivsumserv[asvonr[i]];
							TrackSumKey[TrackCnt] = tstr;
							TrackCnt = TrackCnt +1;
						end;
					end;
					
				end;			
				resetloop(IVr);
			end;
			if(ivretsum[asvonr[i]]>0)then begin
				if(ivretsummanag[asvonr[i] & ":PREPAY"]>0)then begin
				end;
				For(ui=0;ui<userscnt;ui=ui+1) begin
	  			if(ivretsummanag[asvonr[i] & ":" & users[ui]]>0)then begin
					end;
				end; 
				
			end;
		end;
	ret = supertotdolg + supertotdolgdet;
	CountSum = ret;
return;
end;

// пройти все счёт фактуры, в которых поле SalesMan == код менеджера
// сумма товаров с типом свобойдный или работа

// IVVc - счет-фактура
// INVc - товар, 
// ItemType - тип товара | kItemTypePlain - свободный
// ItemType = kItemTypeService
// страховка не добавлять

// 4320

global
procedure count_fact(string SalesManName, date StartDate, date EndDate, var val res,  var val today_res)
begin
	record IVVc	IVr; 			// счет-фактура
	record INVc INr; 			// товар
	boolean 	TrHS, testf;
	row IVVc	IVrw;
	integer		i, mtrw;
	
	res = 0.0;
	today_res = 0.0;
	TrHS = true;
	IVr.SalesMan = SalesManName;
	IVr.InvDate = StartDate;
	while (loopkey("InvDate",IVr,1,TrHS)) begin
		testf = true;
		if (IVr.SalesMan!=SalesManName) then begin testf = false; end;
		if (IVr.InvDate>EndDate) then begin testf = false; TrHS = false; end;
		if (IVr.OKFlag==0) then begin testf = false; end;
		if (IVr.Invalid>0) then begin testf = false; end;
		
		if (testf) then begin
			mtrw = matrowcnt(IVr);
			for (i=0;i<mtrw;i=i+1) begin
				matrowget(IVr,i,IVrw);
				if(IVrw.stp==kInvoiceRowTypeNormal and nonblank(IVrw.ArtCode))then begin
					INr.Code = IVrw.ArtCode;
					if (readfirstmain(INr,1,true)) then begin
						if (INr.ItemType==kItemTypePlain or INr.ItemType==kItemTypeService) then begin
							res = res + IVrw.Sum;
							if (IVr.InvDate == EndDate) then begin
								today_res = today_res + IVrw.Sum;
							end;
						end;
					end;
				end;
			end;
		end;
	end;
	return;
end;

global procedure WebHW(string arg,string param)
begin
	record ManagerPlanVc 		MPr;
	row    ManagerPlanVc		MPrw;
	record RcVc					RepSpec;
	vector string 255 			Name;
	vector val					PlanWork,FactWork,TodWork,TodQty;
	array string 255 			atags;
	string 	255					temp;
	integer 					i, k, mtrw;
	string 255					usrs, tmp;
	date						PrevDate;
	vector date					Start;
	vector date					endDate;
	val							res;
	val 						today_res;
	integer mancnt;
	integer ingcnt;
	vector val vIngSum;
	vector val vManSum;
	array string 50 aing;
	array string 50 aman;
	date sd,ed;
	vector boolean isman,ising,outpers;
	record UserVc USr;
	
	usrs = arg;
	RepSpec.flags[26]=1;
		
	sd.day = 1;
	sd.month = getmonth(currentdate);
	sd.year = getyear(currentdate);
	ed = currentdate;
	RepSpec.sStartDate = sd;
	RepSpec.sEndDate = ed;
	
	ServiceJobsRnStat(RepSpec,mancnt,ingcnt,vIngSum,vManSum,aing,aman);
	
	For(i=0;i<mancnt;i=i+1) begin
		if(nonblank(aman[i]))then begin
			isman[aman[i]] = true;
			if(param=="Man")then begin
				outpers[aman[i]] = true;
			end;
	  end;
	end; 
	For(i=0;i<ingcnt;i=i+1) begin
		if(nonblank(aing[i]))then begin
			ising[aing[i]] = true;
			if(param=="Ing")then begin
				outpers[aing[i]] = true;
			end;
	  end;
	end;
	
	
	if (nonblank(usrs)) then begin
		k = 0;
		ExtractObj(usrs,k,tmp);
		while (nonblank(tmp)) begin
			MPr.Code = tmp;
			if (readfirstmain(MPr,1,true)) then begin
				mtrw = matrowcnt(MPr);
				matrowget(MPr,0,MPrw);
				if(MPrw.PlansRepair>0 and outpers[MPr.Code])then begin
					PrevDate = MPrw.PlansDate;
					PrevDate.day = 1;
					PlanWork[tmp] = MPrw.PlansRepair;
					for (i=0;i<mtrw;i=i+1) begin
						matrowget(MPr,i,MPrw)
						if (currentdate <= MPrw.PlansDate and currentdate > PrevDate) then begin
							Start[tmp] = addDay(PrevDate, 1); //MPrw.PlansDate;
							PlanWork[tmp] = MPrw.PlansRepair;
						end;
						PrevDate = MPrw.PlansDate;
					end;
					endDate[tmp] = currentdate;
					if(param=="Ing")then begin
						FactWork[tmp] = vIngSum[tmp & ":GOTOV:SERV"];
						TodWork[tmp] = vIngSum[tmp & ":TODAYSUM"];
						TodQty[tmp] = vIngSum[tmp & ":TODAYQTY"];
					end;
					if(param=="Man")then begin
						FactWork[tmp] = vManSum[tmp & ":GOTOV:SERV"];
						TodWork[tmp] = vManSum[tmp & ":TODAYSUM"];
						TodQty[tmp] = vManSum[tmp & ":TODAYQTY"];
					end;
				end;
			end;
			ExtractObj(usrs,k,tmp);
		end;
		GetVectorTags(PlanWork,atags);
	end else begin
		while (loopmain(MPr,1,true)) begin
			mtrw = matrowcnt(MPr);
			matrowget(MPr,0,MPrw)
			if(MPrw.PlansRepair>0 and outpers[MPr.Code])then begin
				PrevDate = MPrw.PlansDate;
				PrevDate.day = 1;
				PlanWork[MPr.Code] = MPrw.PlansRepair;
				for (i=0;i<mtrw;i=i+1) begin
					matrowget(MPr,i,MPrw)
					if (currentdate <= MPrw.PlansDate and currentdate > PrevDate) then begin
						Start[MPr.Code] = addDay(PrevDate, 1); //MPrw.PlansDate;
						PlanWork[MPr.Code] = MPrw.PlansRepair;
					end;
					PrevDate = MPrw.PlansDate;
				end;
				endDate[MPr.Code] = currentdate;
				if(param=="Ing")then begin
					FactWork[MPr.Code] = vIngSum[MPr.Code & ":GOTOV:SERV"];
					TodWork[MPr.Code] = vIngSum[MPr.Code & ":TODAYSUM"];
					TodQty[MPr.Code] = vIngSum[MPr.Code & ":TODAYQTY"];
				end;
				if(param=="Man")then begin
					FactWork[MPr.Code] = vManSum[MPr.Code & ":GOTOV:SERV"];
					TodWork[MPr.Code] = vManSum[MPr.Code & ":TODAYSUM"];
					TodQty[MPr.Code] = vManSum[MPr.Code & ":TODAYQTY"];
				end;
			end;
		end;
	end;
	GetVectorTags(Start, atags);
	WebOutString("{");
	for (i = 0; i < atags.length; i = i + 1) begin
		//WebOutString("{");
		if(FactWork[atags[i]]==0)then begin
			FactWork[atags[i]] = 0;
		end;
		if(PlanWork[atags[i]]==0)then begin
			PlanWork[atags[i]] = 0;
		end;
		if(TodWork[atags[i]]==0)then begin
			TodWork[atags[i]] = 0;
		end;
		if(TodQty[atags[i]]==0)then begin
			TodQty[atags[i]] = 0;
		end;
		USr.Code = atags[i];
		if(readfirstmain(USr,1,true))then begin
			temp = "\"" & USr.Name & "\": {" & "\"fact\":" & FactWork[atags[i]] & ",\"plan\":" & PlanWork[atags[i]] & ",\"today_res\":" & TodWork[atags[i]] &",\"today_qty\":" & TodQty[atags[i]] & "}";
			WebOutString(temp);
			if (i < atags.length - 1) then begin
				WebOutString(",");
			end;
			temp = "";
		end;
	end;
	WebOutString("}");
	return;
end;

global webpublic procedure WebHWIng()
begin
	string 255 arg,param;
	
	arg = webgetarg("users");
	param = "Ing";
	WebHW(arg,param);

return;
end;

global webpublic procedure WebHWMan()
begin
	string 255 arg,param;
	
	arg = webgetarg("users");
	param = "Man";
	WebHW(arg,param);
	
return;
end;
