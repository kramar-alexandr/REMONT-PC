external procedure ExtractObj(string,var Integer,var string);

SetLangMode(LangRussian,"RUS",0);

function string 20 PrepareCode(string indisp)
begin
  string 20 res,newdisp;
  integer i,lenth;
  string 1 c;
  
    res = "";
    newdisp = left(indisp,20);
    lenth = len(newdisp); 
    if (lenth>0) then begin
      for (i=0;i<lenth;i=i+1) begin
        c= Mid(newdisp,i,1);
        if (asc(c)>31) then begin
          if (c==" " or c=="." or c=="," or c==";") then begin
            res = res & "_";
          end else begin
            res = res & c;
          end;
        end;
        
      end;
      res = UpperCase(res);
    end;
    
  PrepareCode = res;
  return;
end;

function string 20 PreparePhone(string inPhone)
begin
  string 100 res,newPhone;
  integer i,lenth;
  string 1 c;
  
    res = "";
    newPhone = inPhone;
    lenth = len(newPhone); 
    if (lenth>0) then begin
      for (i=0;i<lenth;i=i+1) begin
        c= Mid(newPhone,i,1);
        if (asc(c)>=48 and asc(c)<=57) then begin
          res = res & c;
        end;
      end;
      if (left(res,1)=="3") then begin
        res = Right(res,len(res)-1);
      end;
      if (left(res,1)=="8") then begin
        res = Right(res,len(res)-1);
      end;
    end;
    
  PreparePhone = res;
  return;
end;

function boolean CheckIfDate(string inDate)
begin
  Boolean res;
  string 20 tstr;
  integer pos,digits;
    
    pos = 0;
    digits = 0;
    ExtractObj(inDate,pos,tstr);
    while (nonblank(tstr)) begin
      digits = digits + 1;
      ExtractObj(inDate,pos,tstr);
    end;
    if (digits==3) then begin
      res = true;
    end;

  CheckIfDate = res;
  return;
end;

procedure AddContactToFile(record CUVc CUr, string filename)
begin
  area contactArea;
  string 2 nextline;
  Boolean writeToFileF;
  
    nextline = chr(13) & chr(10);
    if (FILEEXISTS(filename)==false) then begin
      AddTextToArea("format	" & nextline,contactArea);
      AddTextToArea("1	44	1	0	0	0	0	.	" & nextline,contactArea);
      AddTextToArea(nextline,contactArea);
      AddTextToArea("codepage	UTF-8	" & nextline,contactArea);
      AddTextToArea(nextline,contactArea);
      AddTextToArea("HansaVersion	" & nextline,contactArea);
      AddTextToArea("8.3 2017-03-27 (build 83250500)	StandardERP	" & nextline,contactArea);
      AddTextToArea(nextline,contactArea);
      AddTextToArea("cu5	" & nextline,contactArea);
      writeToFileF = true;
    end;
    if (NonBlank(CUr.Code)) then begin
      AddTextToArea("	0	1	",contactArea);
      AddTextToArea(CUr.Code & "	" & CUr.Name,contactArea);
      AddTextToArea("										",contactArea);
      AddTextToArea(CUr.Phone,contactArea);
      AddTextToArea("		РОЗН		5	0	0		1				1			1		0.00										0						0									0	",contactArea);
      AddTextToArea(CUr.eMail,contactArea);
      AddTextToArea("			0	0			0	0	0		0											0	0	0			",contactArea);
      AddTextToArea(CUr.Mobile,contactArea);
      AddTextToArea("	0	0																					0	0	1											0	0				0		0			0	0	0					0		0		0	0			",contactArea);
      AddTextToArea(CUr.AltPhone & "	" & CUr.Comment0 & "	" & CUr.Comment1,contactArea);
      AddTextToArea("							0	0							0						0									0								0					0						0									0							0	0	0	2			0	0																	0	0	0	2	0	0		0		0	0	",contactArea);
      AddTextToArea(nextline & "$%^!:	CUVc_Custom	0	",contactArea);
      writeToFileF = true;
    end;
    if (writeToFileF) then begin
      AddTextToArea(nextline & nextline,contactArea);
      WriteAreaToFile(contactArea,filename,1);
    end;
 
 return; 
end;


global
updating procedure CUAndSVOInitSystemImportIn()
begin
  record CUVc CUr;
  record SVOVc SVOr;
  row SVOVc SVOrw;
  string 255 receiptNr,device,serialNr,clientName,inspector,serviceWorks,shareParts;
  string 255 serviceMaster,comment,repairNote,point;
  date blankd,dateOfReceipt,repairDate,dateDelivery;
  Boolean insertRowF;
  val workCost,sharePartCost,total,discount,cardDiscount;
  array string 100 phones;
  string 100 tempDate,phone,mail,addPhone,addPhone2,curPhone;
  LongInt importRowCnt;
  
  //if (SetclientNamepage("WINDOWS-1251")==false) then begin
   // LogText(0,"***  Load Codepage ISO-8859-5. FAIL****	");
  //End;

	importRowCnt = 1;
	while (TestEOF()==false) begin
    receiptNr = ImportField;
    device = ImportField;
    serialNr = ImportField;
    clientName = ImportField;
    tempDate = ImportField;
    if (CheckIfDate(tempDate)) then begin
      dateOfReceipt = StringToDate(tempDate);
    end else begin
      dateOfReceipt = blankd;
    end;
    inspector = ImportField;
    tempDate = ImportField;
    if (CheckIfDate(tempDate)) then begin
      repairDate = StringToDate(tempDate);
    end else begin
      repairDate = blankd;
    end;
    serviceWorks = ImportField;
    shareParts = ImportField;
    serviceMaster = ImportField;
    //not stricted format of cost data. Text is present {
    workCost = StringToVal(ImportField,M4Val);
    sharePartCost = StringToVal(ImportField,M4Val);
    total = StringToVal(ImportField,M4Val);
    discount = StringToVal(ImportField,M4Val);
    cardDiscount = StringToVal(ImportField,M4Val);
    //not stricted format of cost data. Text is present }
    ImportField;
    tempDate = ImportField;
    if (CheckIfDate(tempDate)) then begin
      dateDelivery = StringToDate(tempDate);
    end else begin
      dateDelivery = blankd;
    end;
    phone = ImportField;
    mail = ImportField;
    addPhone = ImportField;
    addPhone2 = ImportField;
    comment = ImportField;
    repairNote = ImportField;
    point = ImportField;
    
    curPhone = "";
    ClearArray(phones);
    if (NonBlank(phone)) then begin
      phones[phones.length] = PreparePhone(phone);
    end;
    if (NonBlank(addPhone)) then begin
      phones[phones.length] = PreparePhone(addPhone);
    end;
    if (NonBlank(addPhone2)) then begin
      phones[phones.length] = PreparePhone(addPhone2);
    end;
    if (phones.length>0) then begin
      curPhone = phones[0];
      if (left(curPhone,2)=="00") then begin
        curPhone = Right(curPhone,len(curPhone)-1);
      end;
      if (len(curPhone)==9 and left(curPhone,1)!="0") then begin
        curPhone = "0" & curPhone;
      end;
      //some other phone hadlings
 
      if (NonBlank(curPhone)) then begin
        CUr.Code = curPhone;
        if (ReadfirstMain(CUr,1,true)==false) then begin
          RECORDNEW(CUr);
          CUr.Code = curPhone;
          CUr.Name = clientName;
          CUr.Phone = curPhone;
          if (NonBlank(phones[1])) then begin
            CUr.AltPhone = phones[1];
          end;
          if (NonBlank(phones[2])) then begin
            CUr.Mobile = phones[2];
          end;
          if (NonBlank(mail)) then begin
            CUr.eMail = mail;
          end;
          if (NonBlank(comment)) then begin
            CUr.Comment0 = comment;
          end;
          if (NonBlank(point)) then begin
            CUr.Comment1 = "Service point:" & point;
          end;
          //LogText(0,"Contact of receipt #" & receiptNr & ", phone: " & curPhone);
          AddContactToFile(CUr,"CUVc_PK-Remont.txt");
          /*if (RecordStore(CUr,true)==false) then begin
    			  LogText(0,"Problem to insert contact of receipt #" & receiptNr & ". Code: " & curPhone & ", name: " & clientName);
    			end;*/
    	  end else begin
    	    //if record exists maybe data should be added if any
    	    LogText(0,"Contact of receipt #" & receiptNr & " already exists. Code: " & curPhone & ", name: " & clientName);
        end;
      end;
    end else begin
      LogText(0,"Phone was not imported from row #" & importRowCnt & ", origin receiptNr #" & receiptNr);
    end;
    if (NonBlank(curPhone) or NonBlank(clientName)) then begin
      //LogText(0,"Receipt #" & receiptNr);
      RECORDNEW(SVOr);
      if (NonBlank(curPhone)) then begin
        SVOr.CustCode = curPhone;
      end;
      if (NonBlank(clientName)) then begin
        SVOr.Addr0 = clientName;
      end;
      if (Blank(curPhone) and NonBlank(mail)) then begin
        SVOr.Addr0 = SVOr.Addr0 & " " & mail;
      end;
      if (dateOfReceipt!=blankd) then begin
        SVOr.TransDate = dateOfReceipt;
      end;
      if (NonBlank(inspector) and inspector!="0") then begin
        SVOr.Inspector = inspector;
        /*if (NonBlank(SVOr.Inshe)) then begin
          SVOr.Inshe = SVOr.Inshe & ". ";
        end;
        SVOr.Inshe = SVOr.Inshe & "Inspector:" & inspector;*/
      end;
      if (repairDate!=blankd) then begin
        SVOr.PlanShipDate = repairDate;
      end;
      if (nonblank(serviceWorks)) then begin
        SVOr.Comment2 = "Works:" & serviceWorks;
      end;
      if (NonBlank(shareParts)) then begin
        SVOr.Batary = "Parts:" & shareParts;
      end;
      if (NonBlank(serviceMaster)) then begin
        SVOr.ServiceManager = serviceMaster;
      end;
      if (dateDelivery!=blankd) then begin
        SVOr.RegDate = dateDelivery;
      end;
      if (NonBlank(repairNote)) then begin
        if (NonBlank(SVOr.Inshe)) then begin
          SVOr.Inshe = SVOr.Inshe & ". ";
        end;
        SVOr.Inshe = SVOr.Inshe & repairNote;
      end;
      if (NonBlank(point)) then begin
        SVOr.CustomField13 = "Service point:" & point;
      end;
      if (NonBlank(receiptNr)) then begin
        SVOr.CustomField14 = "ServiceMY receiptNr:" & receiptNr;
      end;
      
      insertRowF = false;
      ClearRow(SVOr,SVOrw,1);
      if (NonBlank(device)) then begin
        SVOrw.Spec = device;
        insertRowF = true;
      end;
      if (NonBlank(serialNr) and serialNr!="неизвестен") then begin
        SVOrw.NewSerialNr = serialNr;
        insertRowF = true;
      end;
      if (insertRowF and total<>0) then begin
        SVOrw.Cost = total;
      end;
      if (insertRowF) then begin
        MatRowInsert(SVOr,0,SVOrw);
      end;
      if (SVOr.SerNr==-1) then begin
        SVOr.SerNr = NextSerNr("SVOVc",SVOr.TransDate,-1,false,"");
      end;
      SVOr.DoneMark = 1;
      if (RecordInsert(SVOr,true)==false) then begin
        LogText(0,"Problem to insert receipt #" & receiptNr);
      end;
    end else begin
      LogText(0,"Order was not imported from row #" & importRowCnt & ", origin receiptNr #" & receiptNr);
    end;
    
    if (NextImportLine(true)) then begin end;
    importRowCnt = importRowCnt + 1;
	end;

return;
end;