external procedure HTSOrdStatus(Integer, Integer, Integer,var string);
external procedure HTWOrder(longint, longint,var string);
external procedure HTDetailLevel(Integer,var string);
external procedure HTCusts(string, string,var string);
external procedure HTStdProb(string,var string );
external procedure HT2Per(Date, Date , var string);
remote procedure CountNumberRepeatPhone(string,var array longint,var integer );
external function LongInt CountWorkingDays(Date,Date,string,string);
external function LongInt DateDiff(Date,Date);
external function Time TimeDiff(Time,Time);// Edit ************************** Tuesday, 29 August 2017 14:21:47
external procedure ExtractObj(string,var Integer,var string);
external procedure MySortStringArray(var array string,integer);
external function boolean KIVIFound(record SVOVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 30 March 2018 11:36:17
external procedure FindKIVIModel(var record INVc,String,string,var string,var string);

SetLangMode(LangRussian,"RUS",0);

procedure HTSWOrdStat(Integer notm,Integer parm,Integer mad, var string res)
begin
  string 255 t2;

  res = "";
  if (notm==1) then begin
    t2 = USetStr(7746);
    res = res & t2;
  end;
  if (parm==1) then begin
    t2 = USetStr(7747);
    if (nonblank(res)) then begin
      res = res & " - ";
    end;
    res = res & t2;
  end;
  if (mad==1) then begin
    t2 = USetStr(7748);
    if (nonblank(res)) then begin
      res = res & " - ";
    end;
    res = res & t2;
  end;
return;
end;

procedure CheckWORow(record SVOVc SVOp, var Boolean made, var Boolean notmade)
begin
  Integer rwcnt,i;
  row SVOVc SVOrw;
  Boolean res;
  record WOVc WOr;

  rwcnt = MatRowCnt(SVOp);
  for (i = 0; i<rwcnt; i = i + 1) begin
    MatRowGet(SVOp,i,SVOrw);
    if (SVOrw.WOSerNr==-1) then begin
      notmade = true;
    end else begin
      WOr.SerNr = SVOrw.WOSerNr;
      if (ReadFirstMain(WOr,1,true)) then begin
        if (WOr.Closed==3) then begin
          made = true;
        end;
        if ((WOr.Closed==0) or (WOr.Closed==2)) then begin
          notmade = true;
        end;
      end;
    end;
  end;
return;
end;

procedure RepOrder(record SVOVc SVOp,Boolean showproblemf)
begin
  Integer i,rwcnt;
  row SVOVc SVOrw;
  record StandProblemVc STPr;

  StartFormat(15);
  OutString(0,"DblSVOVc",SVOp.SerNr,false);
  OutDate(130,0,SVOp.TransDate,false);
  OutString(220,0,SVOp.PayDeal,false);
  EndFormat;
  StartFormat(15);
  OutString(50,0,SVOp.CustCode,false);
  OutString(150,0,SVOp.Addr0,false);
  OutString(400,0,SVOp.Phone,false);
  EndFormat;
  StartFormat(15);
  OutString(50,0,SVOp.CustCat,false);
  OutString(200,0,SVOp.Addr1,false);
  StartFormat(15);
  EndFormat;
  StartFormat(15);
  OutString(50,0,SVOp.OurContact,false);
  OutString(200,0,SVOp.Addr2,false);
  EndFormat;
  if (nonblank(SVOp.Addr3)) then begin
    StartFormat(15);
    OutString(200,0,SVOp.Addr3,false);
    EndFormat;
  end;
  if (nonblank(SVOp.CustContact)) then begin
    StartFormat(15);
    OutString(200,0,SVOp.CustContact,false);
    EndFormat;
  end;
  rwcnt = MatRowCnt(SVOp);
  if (rwcnt>0) then begin
    StartFormat(15);
    OutString(20,0,USetStr(12750),false);
    OutString(100,0,USetStr(12751),true);
    OutString(110,0,USetStr(12752),false);
    OutString(270,0,USetStr(12753),false);
    OutString(410,0,USetStr(12754),true);
    OutString(440,0,USetStr(12755),true);
    OutString(480,0,USetStr(12756),true);
    EndFormat;
    Gray_Divider(20,1);
  end;
  
  for (i = 0; i<rwcnt; i = i + 1) begin
    MatRowGet(SVOp,i,SVOrw);
    if (SVOrw.stp==1) then begin
      StartFormat(15);
      OutString(20,0,SVOrw.ArtCode,false);
      OutVal(100,0,SVOrw.Quant,M40Val,true);
      OutString(110,0,SVOrw.Spec,false);
      OutString(270,0,SVOrw.NewSerialNr,false);
      OutString(410,0,SVOrw.Price,true);
      OutString(440,0,SVOrw.VATCode,true);
      OutLongInt(480,0,SVOrw.WOSerNr,true);
      EndFormat;
      if (showproblemf) then begin
        STPr.Code = SVOrw.StandProblem;
        if (ReadFirstMain(STPr,1,true)) then begin
          StartFormat(15);
          OutString(200,"DblStandProblemVc",STPr.Code,false);
          OutString(250,0,STPr.ShortDesc,false);
          EndFormat;
          if nonblank(STPr.Comment1) then begin
            StartFormat(15);
            OutString(250,0,STPr.Comment1,false);
            EndFormat;
          end;
          if nonblank(STPr.Comment2) then begin
            StartFormat(15);
            OutString(250,0,STPr.Comment2,false);
            EndFormat;
          end;
          if nonblank(STPr.Comment3) then begin
            StartFormat(15);
            OutString(250,0,STPr.Comment3,false);
            EndFormat;
          end;
        end;
      end;                  
    end;
  end;
  Black_Divider(300,1);
  StartFormat(15);
  if (SVOp.ExportFlag!=0) then begin
    OutString(20,0,USetStr(2568),false);
  end;
  OutString(100,0,SVOp.Objects,false);
  OutString(330,0,SVOp.TotCost,true);
  OutString(410,0,SVOp.TotPrice,true);
  EndFormat;
  return;
end;

function Boolean CheckIfPartInvoiced(record SVOVc SVOr)
begin
  Boolean res;
  row SVOVc SVOrw;
  Integer i,rwcnt;
  
  rwcnt = MatRowCnt(SVOr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(SVOr,i,SVOrw);
    if (SVOrw.Invd!=0) then begin
      res = true;
      goto LCheckIfPartInvoiced;
    end;
  end;
LCheckIfPartInvoiced:;  
  CheckIfPartInvoiced = res;
  return;
end;

global
procedure SVOListRn(record RcVc RepSpec)
begin
  record SVOVc SVOr;
  row SVOVc SVOrw;
  Boolean TrHs;
  Boolean testf;
  val iv;
  val TotSum;
  date afr;
  date ato;
  string 255 tstr;
  Integer rw,i,mtrw,j,mtrw1,loops;// Edit ************************** Wednesday, 18 May 2011 15:22:32
  Boolean womade;
  Boolean wonotmade,TrHs1;// Edit ************************** Tuesday, 11 October 2011 16:11:25
  record WSVc WSr;
  row WSVc WSrw;
  string 255 serial,artcode,diagstr,partnum;// Edit ************************** Tuesday, 11 October 2011 16:03:06
  string 20 key;
  date compareDate;
  record IntSerBalVc ISBr;// Edit ************************** Friday, 23 June 2017 16:51:36
	record LocationVc Locr;
	val sumsvo,qtysvo;
	record UserVc User;
	record INVc INr;
	record DIVc Dir;
	string 255 NameStr;
	
	if(usercanaction("SVOListGroupAcces",false)==false)then begin
		User.Code = currentuser;
		if(readfirstmain(User,1,true))then begin
			if(nonblank(User.SalesGroup))then begin
				RepSpec.f5 = User.SalesGroup;
			end;
		end;
	end;
  
  afr = RepSpec.sStartDate;//FirstInRange(RepSpec.f1,30);
  ato = RepSpec.sEndDate;//LastInRange(RepSpec.f1,30);
  
  
  rw = 1;
  TotSum = 0;
  StartReportnoheaderJob(USetStr(7620));

  
  StartFormat(15);
    OutString(0,0,"№",false);
    OutString(50,0,"Вн. Номер",false);
    OutString(100,0,"Клиент",false);
    OutString(150,0,"Имя",false);
    OutString(300,0,"Телефон",false);
    OutString(340,0,"Дата",false);
    OutString(1,0,"Статус",true);
    if(RepSpec.Media==mtExcel or RepSpec.Media==mtClipboard)then begin
    	OutString(1,0,"Устройство",true);
    	OutString(1,0,"Название",true);
		OutString(1,0,"Модель",true);
		OutString(1,0,"Диагональ",true);
    	OutString(1,0,"На складе",true);
    	OutString(0,0,"Жалобы",false);
    	OutString(0,0,"Внешний вид",false);
    	OutString(0,0,"Гр.Пр.",false);
    	OutString(150,0,"Принял",false);
    	OutString(300,0,"Сер. мастер",false);
    	OutString(0,0,"Предопл",false);
    	OutString(150,0,"К оплате:",false);
    end;

  EndFormat;
  
  
  switch (RepSpec.ArtMode) begin
    case 0:
      key = "AllGetItemDate";
      SVOr.GetItemDate = afr;
    case 1:
      key = "EndDiagnDate";
      SVOr.EndDiagnDate = afr;
    case 2:
      key = "PlanShipDate";
      SVOr.PlanShipDate = afr;
    case 3:
      key = "RegDate";
      SVOr.RegDate = afr;
    otherwise
      key = "TransDate";
      SVOr.TransDate = afr;
  end;
  
  loops = 0;
  TrHs = true;
  SVOr.TransDate = afr;
  While(loopkey(key,SVOr,1,TrHs)) begin
  
    switch (RepSpec.ArtMode) begin
      case 0:
        compareDate = SVOr.GetItemDate;
      case 1:
        compareDate = SVOr.EndDiagnDate;
      case 2:
        compareDate = SVOr.PlanShipDate;
      case 3:
        compareDate = SVOr.RegDate;
      otherwise
        compareDate = SVOr.TransDate;
    end;
    
    testf = true;
    serial = "";// Edit ************************** Tuesday, 11 October 2011 16:03:03
    artcode = "";// Edit ************************** Tuesday, 11 October 2011 16:03:03
    if(compareDate>ato)then begin  TrHs = false; testf = false; end;
    if (nonblank(RepSpec.f2) and (RepSpec.f2<>SVOr.CustCode)) then begin testf = false; end;
    if (nonblank(RepSpec.AccStr) and RepSpec.AccStr <> SVOr.OrderClass) then begin testf = false; end;
    if (nonblank(RepSpec.f3) and RepSpec.f3 <> SVOr.ServiceManager) then begin testf = false; end; //Edit***************************Sasha2,12:01 14.02.2017
    if (nonblank(RepSpec.f4) and RepSpec.f4 <> SVOr.CustomField7) then begin testf = false; end; //Edit***************************Sasha2,12:01 14.02.2017
    if (nonblank(RepSpec.f5) and RepSpec.f5 <> SVOr.SalesGroup) then begin testf = false; end; //Edit***************************Sasha2,12:01 14.02.2017
    
    
    
    
    mtrw = matrowcnt(SVOr);
		if(mtrw>0)then begin
			matrowget(SVOr,0,SVOrw);
			if(nonblank(SVOrw.ArtCode))then begin	
				INr.Code = SVOrw.ArtCode;
				readfirstmain(INr,1,true);
			end;
		end;
		if(nonblank(RepSpec.f6) and SVOrw.ArtCode!=RepSpec.f6)then begin
			testf = false;
		end;
		if(nonblank(RepSpec.f7) and RepSpec.f7!=INr.Group)then begin
			testf = false;
		end;
		if(nonblank(RepSpec.f8) and !setinset(RepSpec.f8,INr.DispGroups))then begin
			testf = false;
		end;
		if(nonblank(RepSpec.f9))then begin
			testf = false;
			DIr.Code = "";
			while(loopmain(DIr,1,true))begin
				if(DIr.CType=="DISP4" and DIr.Name==RepSpec.f9)then begin
					NameStr = NameStr & DIr.Code & ";";
				end;
			end;
			ResetLoop(DIr);
			INr.Code = SVorw.ArtCode;
			if(ReadFirstMain(INr,1,true))then begin
				if(nonblank(INr.Disp4))then begin
					if(setinset(trim(INr.Disp4),NameStr))then begin testf = true; end;
				end;
				if(nonblank(INr.Disp3))then begin
					if(setinset(trim(INr.Disp3),NameStr))then begin testf = true; end;
				end;
				if(nonblank(INr.Disp2))then begin
					if(setinset(trim(INr.Disp2),NameStr))then begin testf = true; end;
				end;
				if(nonblank(INr.Disp1))then begin
					if(setinset(trim(INr.Disp1),NameStr))then begin testf = true; end;
				end;
			end;
		end;
		
		
    
    
    if (RepSpec.flags[4]==0) then begin /* Not Completed  */
      if (SVOr.DoneMark==0) then begin testf = false; end;
    end;
    if (RepSpec.flags[6]==0) then begin /* Completed  */
      if (SVOr.DoneMark!=0) then begin testf = false; end;
    end;
    
    if (testf) then begin 
      testf = false; 
      if (RepSpec.flags[13]==1) then begin /* Предварит */
        if (SVOr.OrderStatus==9) then begin
          testf = true;
        end;
      end;  
      if (RepSpec.flags[1]==1) then begin /* В ожидании */
        if (SVOr.OrderStatus==0) then begin
          testf = true;
        end;
      end;
      if (RepSpec.flags[2]==1) then begin /* На диагностике*/
        if (SVOr.OrderStatus==5) then begin
          testf = true;
        end;
      end;
      if (RepSpec.flags[3]==1) then begin /* На согласовании*/
        if (SVOr.OrderStatus==4) then begin
          testf = true;
        end;
      end;
      if (RepSpec.flags[14]==1) then begin /* Согласовано*/
        if (SVOr.OrderStatus==7) then begin
          testf = true;
        end;
      end;
      if (RepSpec.flags[9]==1) then begin /* В ремонте*/
        if (SVOr.OrderStatus==1) then begin
          testf = true;
        end;
      end;
      if (RepSpec.flags[10]==1) then begin /* В удал. сервисе*/
        if (SVOr.OrderStatus==8) then begin
          testf = true;
        end;
      end;
      if (RepSpec.flags[15]==1) then begin /* Ожидает запч.*/
        if (SVOr.OrderStatus==3) then begin
          testf = true;
        end;
      end;
      if (RepSpec.flags[16]==1) then begin /* Заказать запч.*/
        if (SVOr.OrderStatus==10) then begin
          testf = true;
        end;
      end;
      if (RepSpec.flags[11]==1) then begin /* Готов.*/
        if (SVOr.OrderStatus==2) then begin
          testf = true;
        end;
      end;
      if (RepSpec.flags[12]==1) then begin /* Отказ.*/
        if (SVOr.OrderStatus==6) then begin
          testf = true;
        end;
      end;
      if (RepSpec.flags[17]==1) then begin /* Вернули на доработку*/
        if (SVOr.OrderStatus==11) then begin
          testf = true;
        end;
      end;
      if (RepSpec.flags[18]==1) then begin /* Клиент думает*/
        if (SVOr.OrderStatus==12) then begin
          testf = true;
        end;
      end;
    end;
    
    if(testf)then begin
    	if(RepSpec.flags[19]==0 and KIVIFound(SVOr))then begin
    		testf = false;
    	end;
    	if(RepSpec.flags[19]==1 and KIVIFound(SVOr)==false)then begin
    		testf = false;
    	end;   
    end;
    
    if(testf)then begin
      mtrw = matrowcnt(SVOr);
      for(i=0;i<mtrw;i=i+1) begin
        matrowget(SVOr,i,SVOrw);
        
        StartFormat(15);
					OutString(0,"DblSVOVc",SVOr.SerNr,false);
					OutString(50,0,SVOr.InnerOrderNr,false);
					OutString(100,"DblCUVc",SVOr.CustCode,false);
					OutString(150,0,SVOr.Addr0,false);
					OutString(300,0,SVOr.Kontinfo1,false);
					OutString(340,0,SVOr.TransDate,false);
					OutString(1,0,SVOr.StatusText,true);
					//OutString(260,0,SVOrw.Spec,false);
				
				if(RepSpec.Media!=mtExcel and RepSpec.Media!=mtClipboard)then begin
					EndFormat;
				end;
				if(RepSpec.Media!=mtExcel and RepSpec.Media!=mtClipboard)then begin
					StartFormat(15);
						OutString(0,0,"Устройство:",false);
						OutString(50,0,SVOrw.ArtCode,false);	
						OutString(150,0,SVOrw.Spec,false);
						if(nonblank(SVOrw.ArtCode) and nonblank(SVOrw.SerialNr))then begin
							ISBr.Item = SVOrw.ArtCode;
							ISBr.Serial = SVOrw.SerialNr;
							TrHs1 = true;
						
							while(loopkey("ItemSerial",ISBr,2,TrHs1)) begin
								if(ISBr.Item!=SVOrw.ArtCode)then begin TrHs1 = false; end;
								if(ISBr.Serial!=SVOrw.SerialNr)then begin TrHs1 = false; end;
					
								if(TrHs1 and ISBr.Quant>0)then begin
									OutString(350,0,"Склад:",false);
									Locr.Code = ISBr.Location;
									readfirstmain(Locr,1,true);
									if(nonblank(Locr.Name))then begin
										OutString(400,0,Locr.Name,false);
									end else begin
										OutString(400,0,ISBr.Location,false);
									end;
								end;
							end;
							resetloop(ISBr);
						end;
					EndFormat;
				end else begin
					OutString(50,0,SVOrw.ArtCode,false);	
					OutString(150,0,SVOrw.Spec,false);
					if(KIVIFound(SVOr))then begin
						FindKIVIModel(INr,SVOrw.ArtCode,SVOrw.Spec,diagstr,partnum);
						outstring(200,0,partnum,false);
						outstring(250,0,diagstr,false);
					end else begin
						outstring(200,0,"",false);
						outstring(250,0,"",false);
					end;
					if(nonblank(SVOrw.ArtCode) and nonblank(SVOrw.SerialNr))then begin
						ISBr.Item = SVOrw.ArtCode;
						ISBr.Serial = SVOrw.SerialNr;
						TrHs1 = true;
						Locr.Code = "";
						while(loopkey("ItemSerial",ISBr,2,TrHs1)) begin
							if(ISBr.Item!=SVOrw.ArtCode)then begin TrHs1 = false; end;
							if(ISBr.Serial!=SVOrw.SerialNr)then begin TrHs1 = false; end;
				
							if(TrHs1 and ISBr.Quant>0)then begin
								TrHs1 = false;
								Locr.Code = ISBr.Location;
								readfirstmain(Locr,1,true);
							end;
						end;
						
						if(nonblank(Locr.Name))then begin
							OutString(400,0,Locr.Name,false);
						end else begin
							OutString(400,0,Locr.Code,false);
						end;
						
						resetloop(ISBr);
					end;
				end;
				
				
				if(RepSpec.Media!=mtExcel and RepSpec.Media!=mtClipboard)then begin
					StartFormat(15);
						OutString(0,0,"Жалобы:",false);
						OutString(50,0,SVOr.Comment1,false);	
					EndFormat;
					StartFormat(15);
						OutString(0,0,"Внешний вид:",false);
						OutString(50,0,SVOr.Comment3,false);	
					EndFormat;
					StartFormat(15);
						OutString(0,0,"Гр.Пр.:",false);
						OutString(50,0,SVOr.SalesGroup,false);	
						OutString(150,0,"Принял:",false);
						OutString(200,0,SVOr.CustomField7,false);	
						OutString(300,0,"Сер. мастер:",false);
						OutString(350,0,SVOr.ServiceManager,false);	
					EndFormat;
					StartFormat(15);
						OutString(0,0,"Предопл:",false);
						OutString(50,0,SVOr.PrepaySum,false);	
						OutString(150,0,"К оплате:",false);
						OutString(200,0,SVOr.WSCost,false);		
						sumsvo = sumsvo + SVOr.WSCost;
						qtysvo = qtysvo + 1;
					EndFormat;
					StartFormat(15);
						OutString(0,0,"",false);
					EndFormat;
				end else begin
					OutString(50,0,SVOr.Comment1,false);
					OutString(50,0,SVOr.Comment3,false);	
					OutString(50,0,SVOr.SalesGroup,false);		
					OutString(200,0,SVOr.CustomField7,false);	
					OutString(350,0,SVOr.ServiceManager,false);	
					OutString(50,0,SVOr.PrepaySum,false);	
					OutString(200,0,SVOr.WSCost,false);	
					EndFormat;
				end;
				
				gray_divider(0,1);
        loops = loops + 1;
      end;
    end;    
  end;
  
  if (loops<>0) then begin
    Gray_Divider(0,1);
    StartFormat(15);
    OutString(20,0,USetStr(8707),false);
    OutString(70,0,loops,false);
    EndFormat;
    StartFormat(15);
    OutString(20,0,"Сумма:",false);
    OutString(70,0,sumsvo,false);
    EndFormat;
  end;
  
  
  EndJob;
  return;
end;

SetLangMode(LangUkrainian,"UKR",0);

global procedure ServClientOrderRn(record RcVc RepSpec)
begin
record SVOVc SVOr;
row SVOVc SVOrw;
array longint sernr;
integer count;
integer i,mtrw;
string 200 artcode,spec,price;
record IntSerBalVc ISBr;// Edit ************************** Friday, 23 June 2017 16:51:36
integer j,rwcnt;// Edit ************************** Friday, 23 June 2017 16:51:35
boolean TrHs;
record LocationVc Locr;
		
	CountNumberRepeatPhone(RepSpec.f1,sernr,count);
  startreportnoheaderjob("Информация по клиенту");
	
	startformat(15);
		outstring(0,0,"№",false);
		outstring(50,0,"Дата",false);
		outstring(100,0,"Контакт",false);
		outstring(200,0,"Устройство",false);
		outstring(240,0,"Наименование",false);
		outstring(1,0,"Цена",true);
	endformat;
	if(count>0)then begin
		For(i=0;i<count;i=i+1) begin
	  
			SVOr.SerNr = sernr[i];
			if(readfirstmain(SVOr,1,true))then begin
				mtrw = matrowcnt(SVOr);
				artcode = "";
				spec = "";
				price = "";
				if(mtrw>0)then begin
					matrowget(SVOr,0,SVOrw);
					artcode = SVOrw.ArtCode;
					spec = SVOrw.Spec;
					
				end;
				price = SVOr.WSCost;
				startformat(15);
					outstring(0,"DblSVOVc",SVOr.SerNr,false);
					outstring(50,0,SVOr.TransDate,false);
					outstring(100,0,SVOr.Addr0,false);
					outstring(200,0,artcode,false);
					outstring(240,0,spec,false);
					outstring(360,0,SVOr.StatusText,false);
					outstring(1,0,price,true);
				endformat;
				
				rwcnt = matrowcnt(SVOr);// Edit ************************** Friday, 23 June 2017 16:51:40
				if(rwcnt>0)then begin
					matrowget(SVOr,0,SVOrw);
					if(nonblank(SVOrw.ArtCode) and nonblank(SVOrw.SerialNr))then begin
						ISBr.Item = SVOrw.ArtCode;
						ISBr.Serial = SVOrw.SerialNr;
						TrHs = true;
						while(loopkey("ItemSerial",ISBr,2,TrHs))begin
							if(ISBr.Item!=SVOrw.ArtCode)then begin TrHs = false; end;
							if(ISBr.Serial!=SVOrw.SerialNr)then begin TrHs = false; end;
					
							if(TrHs and ISBr.Quant>0)then begin
								StartFormat(15);
									OutString(0,0,"Усройство:",false);
									OutString(40,0,ISBr.Item,false);
									OutString(100,0,SVOrw.Spec,false);
									OutString(200,0,"Склад:",false);
									Locr.Code = ISBr.Location;
									readfirstmain(Locr,1,true);
									if(nonblank(Locr.Name))then begin
										OutString(230,0,Locr.Name,false);
									end else begin
										OutString(230,0,ISBr.Location,false);
									end;
								endformat;
							end;
						end;
						resetloop(ISBr);
					end;
				end;
		
			Gray_Divider(0,1);// Edit ************************** Friday, 23 June 2017 16:51:40
				
			end;
		end;
	end;
	
	startformat(15);
		OutStringID(0,"DblCrNewSVO","Создать заявку на заказ",false,RepSpec.f1);
		OutStringID(1,"DblCULCLass","Список контактов",true,RepSpec.f1);
	endformat;
	
	endjob;
	
return
end;


global procedure SVODateOff3RepRn(record RcVc RepSpec)
begin
	record SVOVc SVOr;
	row SVOVc SVOrw;
	record UserVc USr;
	boolean testf;
	integer countwdays;
	
	StartReportNoHeaderJob("Просроченные в диагностике заказы!!!!");
		USr.Code = CurrentUser;
		readfirstmain(USr,1,true);
		
		if(nonblank(RepSpec.f1))then begin
			startformat(15);
				outstring(0,"Dbl3RepRnAll","Показать все просроченные в диагностике заказы",false);
			endformat;
		
			gray_divider(0,100);
		end;
		startformat(15);
			outstring(0,0,"Номер",false);
			outstring(50,0,"Дата",false);
			outstring(90,0,"Проср.календ.дн.",false);
			outstring(150,0,"Собств.",false);
			outstring(220,0,"Серв.мастер.",false);
			//outstring(270,0,"Устройство",false);
			outstring(270,0,"Статус",false);
			outstring(350,0,"Сер.номер",false);
			outstring(390,0,"Наименование",false);
		endformat;
		
		while(loopkey("AllServGetItemDate",SVOr,1,true))begin
			testf = true;	
			/*if(USr.SalesGroup!=SVOr.SalesGroup)then begin testf = false; end;
			if(SVOr.DoneMark>0)then begin testf = false; end;
			//if(SVOr.OrderStatus>0 and SVOr.OrderStatus!=4 and SVOr.OrderStatus!=9)then begin testf = false; end;
			if(SVOr.OrderStatus==9)then begin testf = false; end;
			if(SVOr.OrderStatus==2)then begin testf = false; end;
			if(SVOr.OrderStatus==6)then begin testf = false; end;
			
			if(nonblank(RepSpec.f1) and SVOr.ServiceManager!=RepSpec.f1)then begin testf = false; end;
				
			*/
			
			if(SVOr.OrderStatus==12)then begin testf = false; end;
			if(SVOr.OrderStatus==10)then begin testf = false; end;
			if(SVOr.OrderStatus==9)then begin testf = false; end;
			if(SVOr.OrderStatus==7)then begin testf = false; end;
			if(SVOr.OrderStatus==1)then begin testf = false; end;
			if(SVOr.OrderStatus==8)then begin testf = false; end;
			if(SVOr.OrderStatus==3)then begin testf = false; end;
			if(SVOr.OrderStatus==2)then begin testf = false; end;
			if(SVOr.OrderStatus==6)then begin testf = false; end;
			if(SVOr.DoneMark>0)then begin testf = false; end;
			if(nonblank(RepSpec.f1) and SVOr.ServiceManager!=RepSpec.f1)then begin testf = false; end;
			countwdays = CountWorkingDays(SVOr.GetItemDate,Currentdate,"","UA");		
			LogText(0,"SVODateOff3RepRn Oreder #" & SVOr.SerNr & " CountWorkingDays=" & countwdays); //Edit***************************Sasha2,18:42 05.09.2017
			if(countwdays<3)then begin testf = false; end;
			
			if(testf)then begin
				startformat(15);
					outstring(0,"DblSVOVc",SVor.SerNr,false);
					outstring(50,0,SVOr.GetItemDate,false);
					outstring(90,0,countwdays,false);
					outstring(150,0,SVOr.Vlastnik,false);
					outstring(220,0,SVOr.ServiceManager,false);
					MatRowGet(SVOr,0,SVOrw);
					//outstring(270,0,SVOrw.ArtCode,false);
					outstring(270,0,SVOr.StatusText,false);
    			outstring(350,0,SVOrw.SerialNr,false);
    			outstring(390,0,SVOrw.Spec,false);
				endformat;
			end;
		end;
		
	endjob;
	
return;
end;

global procedure SVODateOff14RepRn(record RcVc RepSpec)
begin
	record SVOVc SVOr;
	row SVOVc SVOrw;
	record UserVc USr;
	boolean testf;
	integer countwdays;
	
	StartReportNoHeaderJob("Просроченные в ремонте заказы");
		USr.Code = CurrentUser;
		readfirstmain(USr,1,true);
		
		if(nonblank(RepSpec.f1))then begin
			startformat(15);
				outstring(0,"Dbl14RepRnAll","Показать все просроченные в ремонте заказы",false);
			endformat;
		
			gray_divider(0,100);
		end;
		
		startformat(15);
			outstring(0,0,"Номер",false);
			outstring(50,0,"Дата",false);
			outstring(90,0,"Проср.календ.дн.",false);
			outstring(150,0,"Собств.",false);
			outstring(220,0,"Серв.мастер",false);
			//outstring(270,0,"Устройство",false);
			outstring(270,0,"Статус",false);
			outstring(350,0,"Сер.номер",false);
			outstring(390,0,"Наименование",false);
		endformat;
		
		while(loopkey("AllServGetItemDate",SVOr,1,true))begin
			testf = true;	
			if(!setinset("ADM_V",USr.AccessGroup))then begin
				if(nonblank(USr.SalesGroup))then begin
					if(USr.SalesGroup!=SVOr.SalesGroup)then begin testf = false; end;
				end;
			end;
			if(SVOr.DoneMark>0)then begin testf = false; end;
			if(SVOr.OrderStatus==2)then begin testf = false; end;
			if(SVOr.OrderStatus==9)then begin testf = false; end;
			if(SVOr.OrderStatus==6)then begin testf = false; end;
			if(SVOr.OrderStatus==12)then begin testf = false; end;
			if(nonblank(RepSpec.f1) and SVOr.ServiceManager!=RepSpec.f1)then begin testf = false; end;
			countwdays = CountWorkingDays(SVOr.GetItemDate,Currentdate,"","UA");		
			if(countwdays<5)then begin testf = false; end;
			
			
			if(testf)then begin
				startformat(15);
					outstring(0,"DblSVOVc",SVor.SerNr,false);
					outstring(50,0,SVOr.GetItemDate,false);
					outstring(90,0,countwdays,false);
					outstring(150,0,SVOr.Vlastnik,false);
					outstring(220,0,SVOr.ServiceManager,false);
					MatRowGet(SVOr,0,SVOrw);
					//outstring(270,0,SVOrw.ArtCode,false);
					outstring(270,0,SVOr.StatusText,false);
    			outstring(350,0,SVOrw.SerialNr,false);
    			outstring(390,0,SVOrw.Spec,false);
				endformat;
			end;
		end;
		
	endjob;
	
return;
end;


global procedure CallConversionRn(record RcVc RepSpec)
begin
	record SVOVc SVOr;
	record ActVc Actr;
	row SVOVc SVOrw;
	record UserVc USr;
	boolean testf,TrHs,testf1,TrHs1,foundf;
	integer countwdays,i,acnt,cnt,pos;
	vector boolean operator;
	vector integer calcnt,remcnt,predcnt,caloutcnt,calothercnt;
	array string 200 opername;
	date sd,ed;
	record BinotelCallEndVc BCEr;
	record RLinkVc RLr;
	string 200 tstr;
	integer totcall,sumbyman,personcnt,totcallout,totcallother;
	vector val caltypeqty;
	array string 100 calltype;
	vector boolean calltypflag;
	integer callcnt;
	val callsum;
	val answercnt;
	array integer tb;
	
	tb[0] = 0;
	tb[1] = 90;
	tb[2] = 130;
	tb[3] = 170;
	tb[4] = 200;
	tb[5] = 280;
	
	
	
	StartReportNoHeaderJob("Статистика предварительных заказов");
		USr.Code = CurrentUser;
		readfirstmain(USr,1,true);
		
		
		startformat(15);
			outstring(0,0,"Период:",false);
			outstring(90,0,RepSpec.sStartDate & ":" & RepSpec.sEndDate,false);
		endformat;
		startformat(15);
			outstring(0,0,"Оператор:",false);
			outstring(90,0,RepSpec.f4,false);
		endformat;
		
		startformat(15);
			outstring(tb[0],0,"Оператор",false);
			outstring(tb[1],0,"Входящих",false);
			outstring(tb[2],0,"Исходящие",false);
			outstring(tb[3],0,"Другие",false);
			outstring(tb[4],0,"Предварительных заказов",false);
			outstring(tb[5],0,"Принятых",false);
		endformat;
		sd = RepSpec.sStartDate;
		ed = RepSpec.sEndDate;
		SVOr.TransDate = sd;
		
		SVOr.TransDate = sd;
		TrHS = true;
		while(loopkey("TransDate",SVOr,1,TrHs))begin
			testf = true;
			if(SVOr.TransDate<sd)then begin testf = false; end;
			if(SVOr.TransDate>ed)then begin TrHs = false; testf = false; end;
			if(blank(SVOr.SalesMan))then begin testf = false; end;
			if(nonblank(RepSpec.f4) and SVOr.SalesMan!=RepSpec.f4)then begin
				testf = false;
			end;
			
			if(testf)then begin
				if(operator[SVOr.SalesMan]==false)then begin 
					operator[SVOr.SalesMan] = true;
					opername[acnt] = SVOr.SalesMan;
					acnt = acnt + 1;
				end;
				if(SVOr.TransDate<SVOr.GetItemDate or SVOr.OrderStatus==9)then begin
					predcnt[SVOr.SalesMan] = predcnt[SVOr.SalesMan] + 1;
					if(nonblankdate(SVOr.GetItemDate))then begin
						remcnt[SVOr.SalesMan] = remcnt[SVOr.SalesMan] + 1;
					end;
				end;
				if(SVOr.TransDate==SVOr.GetItemDate and TimeDiff(SVOr.RegTime,SVOr.GetItemTime)>stringtotime("1:0:0"))then begin
					predcnt[SVOr.SalesMan] = predcnt[SVOr.SalesMan] + 1;
					if(nonblankdate(SVOr.GetItemDate))then begin
						remcnt[SVOr.SalesMan] = remcnt[SVOr.SalesMan] + 1;
					end;
				end;
			end;
		end;
		
		Actr.TransDate = sd;
		TrHS = true;
		while(loopkey("TransDate",Actr,1,TrHs))begin
			testf = true;
			if(Actr.TransDate<sd)then begin testf = false; end;
			if(Actr.TransDate>ed)then begin TrHs = false; testf = false; end;
			if(Actr.ActType!="CALL")then begin testf = false; end;
			if(nonblank(RepSpec.f4))then begin
				if(setinset(RepSpec.f4,Actr.MainPersons)==false)then begin
					testf = false;
				end;
			end;
			
			if(testf)then begin
				if(Actr.CallType==2)then begin
					Actr.Comment="Исходящий вызов";
				end;
				if(Actr.CallType==1)then begin
					Actr.Comment="Принятый вызов";
				end;
				
				if(Actr.Comment!="Исходящий вызов" and Actr.Comment!="Принятый вызов" and Actr.CallType==0)then begin
					personcnt = 0;
					pos = 0;
					tstr = "";
					totcallother = totcallother + 1;
					ExtractObj(Actr.MainPersons,pos,tstr);
					while(nonblank(tstr))begin
						if(nonblank(tstr))then begin
							personcnt = personcnt + 1;
						end;
						ExtractObj(Actr.MainPersons,pos,tstr);
					 end;
				 
					 if(personcnt==1)then begin
						if(operator[Actr.MainPersons]==false)then begin 
							operator[Actr.MainPersons] = true;
							opername[acnt] = Actr.MainPersons;
							acnt = acnt + 1;
						end;
						calothercnt[Actr.MainPersons] = calothercnt[Actr.MainPersons] + 1;
						sumbyman = sumbyman + 1;
						foundf = true;
					 end;
				end;
				if(Actr.Comment=="Исходящий вызов" or Actr.CallType==2)then begin
					totcallout = totcallout + 1;
					personcnt = 0;
					pos = 0;
					tstr = "";
					totcallother = totcallother + 1;
					ExtractObj(Actr.MainPersons,pos,tstr);
					while(nonblank(tstr))begin
						if(nonblank(tstr))then begin
							personcnt = personcnt + 1;
						end;
						ExtractObj(Actr.MainPersons,pos,tstr);
					 end;
				 
					 if(personcnt==1)then begin
						if(operator[Actr.MainPersons]==false)then begin 
							operator[Actr.MainPersons] = true;
							opername[acnt] = Actr.MainPersons;
							acnt = acnt + 1;
						end;
						caloutcnt[Actr.MainPersons] = caloutcnt[Actr.MainPersons] + 1;
						sumbyman = sumbyman + 1;
						foundf = true;
					 end;
				end;
				if(Actr.Comment=="Принятый вызов" or Actr.CallType==1)then begin
				 foundf = false;
				 totcall = totcall + 1;
				 pos = 0;
				 personcnt = 0;
				 tstr = "";
				 ExtractObj(Actr.MainPersons,pos,tstr);
				 while(nonblank(tstr))begin
				 	if(nonblank(tstr))then begin
				 		personcnt = personcnt + 1;
				 	end;
				 	ExtractObj(Actr.MainPersons,pos,tstr);
				 end;
				 
				 if(personcnt==1)then begin
				 	if(operator[Actr.MainPersons]==false)then begin 
						operator[Actr.MainPersons] = true;
						opername[acnt] = Actr.MainPersons;
						acnt = acnt + 1;
					end;
					calcnt[Actr.MainPersons] = calcnt[Actr.MainPersons] + 1;
					sumbyman = sumbyman + 1;
					foundf = true;
				 end else begin
				 	SVOr.TransDate = Actr.TransDate;
					TrHs1 = true;
					while(loopkey("TransDate",SVOr,1,TrHs1))begin
						testf1 = true;
						if(SVOr.TransDate!=Actr.TransDate)then begin testf1 = false; TrHs1 = false; end;
						if(blank(SVOr.SalesMan))then begin testf1 = false; end;
						if(setinset(SVOr.SalesMan,Actr.MainPersons)==false)then begin end;
						if(SVOr.CustCode!=Actr.CUCode)then begin testf1 = false; end;

						if(testf1)then begin
							if(operator[SVOr.SalesMan]==false)then begin 
								operator[SVOr.SalesMan] = true;
								opername[acnt] = SVOr.SalesMan;
								acnt = acnt + 1;
							end;
							calcnt[SVOr.SalesMan] = calcnt[SVOr.SalesMan] + 1;
							sumbyman = sumbyman + 1;
							testf1 = false; TrHs1 = false;
							foundf = true;
						end;
					end;
					resetloop(SVOr);
				 end;
				end else begin
					cnt = 1;
					testf1 = true;
					while(ReadRecordLink(SVOr,cnt,BCEr,RLr)) begin
						cnt = cnt+1;
						if(BCEr.callType=="0")then begin
							foundf = false;
							totcall = totcall + 1;
							pos = 0;
							personcnt = 0;
							tstr = "";
							ExtractObj(Actr.MainPersons,pos,tstr);
							while(nonblank(tstr))begin
							if(nonblank(tstr))then begin
								personcnt = personcnt + 1;

							end;
							ExtractObj(Actr.MainPersons,pos,tstr);
							end;

							if(personcnt==1)then begin
							if(operator[Actr.MainPersons]==false)then begin 
								operator[Actr.MainPersons] = true;
								opername[acnt] = Actr.MainPersons;
								acnt = acnt + 1;
							end;
							calcnt[Actr.MainPersons] = calcnt[Actr.MainPersons] + 1;
							sumbyman = sumbyman + 1;
							foundf = true;
							end else begin
							SVOr.TransDate = Actr.TransDate;
							TrHs1 = true;
							while(loopkey("TransDate",SVOr,1,TrHs1))begin
								testf1 = true;
								if(SVOr.TransDate!=Actr.TransDate)then begin testf1 = false; TrHs1 = false; end;
								if(blank(SVOr.SalesMan))then begin testf1 = false; end;
								if(setinset(SVOr.SalesMan,Actr.MainPersons)==false)then begin end;
								if(SVOr.CustCode!=Actr.CUCode)then begin testf1 = false; end;

								if(testf1)then begin
									if(operator[SVOr.SalesMan]==false)then begin 
										operator[SVOr.SalesMan] = true;
										opername[acnt] = SVOr.SalesMan;
										acnt = acnt + 1;
									end;
									calcnt[SVOr.SalesMan] = calcnt[SVOr.SalesMan] + 1;
									sumbyman = sumbyman + 1;
									testf1 = false; TrHs1 = false;
									foundf = true;
								end;
							end;
							resetloop(SVOr);
							end;
						end;
					end;
					
				end;
			end;
		end;
		
		for(i=0;i<acnt;i=i+1)begin
			if(calcnt[opername[i]]>0)then begin
				startformat(15);
					outstring(tb[0],0,opername[i],false);
					outstring(tb[1],0,calcnt[opername[i]],false);
					outstring(tb[2],0,caloutcnt[opername[i]],false);
					outstring(tb[3],0,calothercnt[opername[i]],false);
					outstring(tb[4],0,predcnt[opername[i]],false);
					outstring(tb[5],0,remcnt[opername[i]],false);
				endformat;
			end;
		end;
		
		
		
		startformat(15);
			outstring(0,0,sumbyman,false);
			outstring(90,0,totcall,false);
			outstring(130,0,sumbyman - totcall,false);
		endformat;
		
		
		startformat(15);
			outstring(0,0,"Принятых активностей",false);
			outstring(90,0,totcall,false);
		endformat;
		startformat(15);
			outstring(0,0,"Исходящих активностей",false);
			outstring(90,0,totcallout,false);
		endformat;
		startformat(15);
			outstring(0,0,"Других активностей",false);
			outstring(90,0,totcallother,false);
		endformat;
		startformat(15);
			outstring(0,0,"Всего",false);
			outstring(90,0,totcallother + totcallout + totcall,false);
		endformat;
		
		Gray_Divider(0,1);
		startformat(15);
			outstring(200,0,"По регистру Binotel",false);
		endformat;
		
		resetloop(BCEr);
		BCEr.TransDate = sd;
		TrHs = true;
		while(loopkey("TransDate",BCEr,1,TrHs))begin
			testf = true;
			if(BCEr.TransDate<sd or BCEr.TransDate>ed)then begin TrHs = false; testf = false; end;
			
			
			if(testf)then begin
				
				if(calltypflag[BCEr.internalNumber & ":" & BCEr.disposition]==false)then begin
					calltypflag[BCEr.internalNumber & ":" & BCEr.disposition] = true;
					calltype[callcnt] = BCEr.internalNumber & ":" & BCEr.disposition;
					callcnt = callcnt + 1;
				end;
				caltypeqty[BCEr.internalNumber & ":" & BCEr.disposition] = caltypeqty[BCEr.internalNumber & ":" & BCEr.disposition] + 1;
				callsum = callsum + 1;	
				
				if(BCEr.disposition=="ANSWER" or BCEr.disposition=="TRANSFER")then begin
					answercnt = answercnt + 1;
				end;
							
			end;
		end;
		
		MySortStringArray(calltype,callcnt);
		
		For(i=0;i<callcnt;i=i+1) begin
			startformat(15);
			 outstring(0,0,calltype[i],false);
			 outstring(100,0,caltypeqty[calltype[i]],false);
			endformat;
		end; 
		startformat(15);
		 outstring(0,0,"TOTAL",false);
		 outstring(100,0,callsum,false);
		endformat;
		startformat(15);
		 outstring(0,0,"ANSWER",false);
		 outstring(100,0,answercnt,false);
		endformat;
		
	endjob;
	
return;
end;