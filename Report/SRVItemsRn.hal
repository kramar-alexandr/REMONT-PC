SetLangMode(LangRussian,"RUS",0);

procedure MySortStringArray(var array string astr,integer cnt)
begin
	integer i,j;
	string 100 tmp1,tmp2;
	
	if(cnt>1)then begin
		for(j=0;j<cnt;j=j+1)begin
			for(i=0;i<cnt-1;i=i+1)begin
				if(uppercase(astr[i])>uppercase(astr[i+1]))then begin
					tmp1 = astr[i];
					tmp2 = astr[i+1];
					astr[i] = tmp2;
					astr[i+1] = tmp1;
				end;
			end;
		end;
	end;
		

return;
end;


procedure PrintHeader(record RcVc RepSpec)
begin
	
	Header(1,"test0",0);
	Header(1,"test1",1);

	endheader;
return;
end;

global procedure SRVItemsRn(record RcVc RepSpec)
begin
	record INVc INr;
	record SVOVc SVOr;
	row SVOVc SVOrw;
	record IntSerBalVc SBr;
	vector string 50 vSerLoc,vSerInServ;
	vector boolean vSGExist,vLocExist,vSGLocExist;
	vector longint vSerSVONr;
	array string 50 aSerials,aSerials1;
	integer k,i;
	record SalesGroupVc SGr;
	record LocationVc Locr;
	array integer tabs;
	boolean testfsg,testfloc;
	
	tabs[0] = 0;
	tabs[1] = 40;
	tabs[2] = 250;
	tabs[3] = 320;
	tabs[4] = 380;
	tabs[5] = 420;
	
	StartReportJob("Устройства на сервисе");
		PrintHeader(RepSpec);
		
		while(loopkey("MainKey",SBr,1,true))begin
			if(SBr.Quant>0)then begin
				vSerLoc[SBr.Serial] = SBr.Location;
				vLocExist[SBr.Location] = true;
				aSerials[k] = SBr.Serial;
				k = k+1;
				SVOr.InnerOrderNr = SBr.Serial;
				if(readfirstkey("InnerOrderNr",SVOr,1,true))then begin
					vSerInServ[SBr.Serial] = SVOr.SalesGroup;
					vSGExist[SVOr.SalesGroup] = true;
					vSGLocExist[SVOr.SalesGroup & ";" & SBr.Location] = true;
					vSerSVONr[SBr.Serial] = SVOr.SerNr;
				end else begin
					vSerInServ[SBr.Serial] = "NO";
					vSerSVONr[SBr.Serial] = -1;
				end;
			end;
		end;
		
		SortStringArray(aSerials);
		//CreateSortArray(aSerials1,k,aSerials);
		
		while(loopmain(SGr,1,true))begin
			testfsg = true;
			if(nonblank(RepSpec.f1) and RepSpec.f1!=SGr.SGroupCode)then begin testfsg = false; end;
			
			if(vSGExist[SGr.SGroupCode] and testfsg)then begin
				resetloop(Locr);
				Locr.Code = "";
				while(loopmain(Locr,1,true))begin
					testfloc = true;
					if(nonblank(RepSpec.f2) and RepSpec.f2!=Locr.Code)then begin testfloc = false; end;
					
					if(vSGLocExist[SGr.SGroupCode & ";" & Locr.Code] and testfloc)then begin
						StartFormat(15);
							outstring(tabs[0],0,SGr.SGroupName,false);
						endformat;
						StartFormat(15);
							outstring(tabs[0],0,"Ремонт",false);
							outstring(tabs[1],0,"Устройство",false);
							outstring(tabs[2],0,"На складе сейчас",false);
							outstring(tabs[3],0,"Статус ремонта",false);
							outstring(tabs[4],0,"Принят",false);
							outstring(tabs[5],0,"Готов",false);
						endformat;
						for(i=0;i<k;i=i+1)begin
							
							if(vSerLoc[aSerials[i]]==Locr.Code and vSerInServ[aSerials[i]]==SGr.SGroupCode)then begin
								SVOr.InnerOrderNr = aSerials[i];
								if(readfirstkey("InnerOrderNr",SVOr,1,true))then begin
									if(matrowcnt(SVOr)>0)then begin
										matrowget(SVOr,0,SVOrw);
									end;
									StartFormat(15);
										outstring(tabs[0],"DblSVOVcSer",aSerials[i],false);
										outstring(tabs[1],0,SVOrw.Spec,false);
										outstring(tabs[2],0,vSerLoc[aSerials[i]],false);
										outstring(tabs[3],0,SVOr.StatusText,false);
										outstring(tabs[4],0,SVOr.GetItemDate,false);
										outstring(tabs[5],0,SVOr.PlanShipDate,false);
									endformat;
								end;
							end;
						end;
						black_Divider(0,1);
					end;
				end;
			end;
		end;
		SGr.SGroupCode = "NO";
		SGr.SGroupName = "Без группы продаж";
		if(vSGExist[SGr.SGroupCode])then begin
			resetloop(Locr);
			Locr.Code = "";
			while(loopmain(Locr,1,true))begin
				if(vSGLocExist[SGr.SGroupCode & ";" & Locr.Code])then begin
					StartFormat(15);
						outstring(tabs[0],0,SGr.SGroupName,false);
					endformat;
					for(i=0;i<k;i=i+1)begin
						if(vSerLoc[aSerials[i]]==Locr.Code and vSerInServ[aSerials[i]]==SGr.SGroupCode)then begin
							StartFormat(15);
								//outstring(tabs[0],0,SGr.SGroupName,false);
								outstring(tabs[1],0,Locr.Name,false);
								outstring(tabs[2],0,aSerials[i],false);
							endformat;
						end;
					end;
					black_Divider(0,1);
				end;
			end;
		end;
		
	endjob;

return;
end;